

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jul 22 19:58:26 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.42
    26                           ; Generated 13/04/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F88 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  0105                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  0105                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165                           
   166                           	psect	idataBANK0
   167  0239                     __pidataBANK0:	
   168                           
   169                           ;initializer for convertAD@F1250
   170  0239  3401               	retlw	1
   171  023A  3400               	retlw	0
   172  023B  3402               	retlw	2
   173  023C  3400               	retlw	0
   174  023D  3404               	retlw	4
   175  023E  3400               	retlw	0
   176  023F  3408               	retlw	8
   177  0240  3400               	retlw	0
   178  0241  3410               	retlw	16
   179  0242  3400               	retlw	0
   180  0243  3420               	retlw	32
   181  0244  3400               	retlw	0
   182  0245  3440               	retlw	64
   183  0246  3400               	retlw	0
   184                           
   185                           ;initializer for _t_ref
   186  0247  3402               	retlw	2
   187  0248  3400               	retlw	0
   188  0005                     _PORTAbits	set	5
   189  0006                     _PORTBbits	set	6
   190  001E                     _ADRESH	set	30
   191  001F                     _ADCON0bits	set	31
   192  001F                     _ADCON0	set	31
   193  0005                     _PORTA	set	5
   194  0006                     _PORTB	set	6
   195  009E                     _ADRESL	set	158
   196  009F                     _ADCON1	set	159
   197  0081                     _OPTION_REGbits	set	129
   198  009B                     _ANSEL	set	155
   199  008F                     _OSCCON	set	143
   200  0086                     _TRISB	set	134
   201  0085                     _TRISA	set	133
   202                           
   203                           ; #config settings
   204  0000                     
   205                           	psect	cinit
   206  07F2                     start_initialization:	
   207  07F2                     __initialization:	
   208                           
   209                           ; Initialize objects allocated to BANK0
   210  07F2  1383               	bcf	3,7	;select IRP bank0
   211  07F3  3068               	movlw	low (__pdataBANK0+16)
   212  07F4  00FD               	movwf	btemp+-1
   213  07F5  3002               	movlw	high __pidataBANK0
   214  07F6  00FE               	movwf	btemp
   215  07F7  3039               	movlw	low __pidataBANK0
   216  07F8  00FF               	movwf	btemp+1
   217  07F9  3058               	movlw	low __pdataBANK0
   218  07FA  0084               	movwf	4
   219  07FB  118A  222D         	fcall	init_ram0
   220  07FD                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223  07FD                     __end_of__initialization:	
   224  07FD  0183               	clrf	3
   225  07FE  118A  2AB4         	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	dataBANK0
   228  0058                     __pdataBANK0:	
   229  0058                     convertAD@F1250:	
   230  0058                     	ds	14
   231  0066                     _t_ref:	
   232  0066                     	ds	2
   233                           
   234                           	psect	inittext
   235  0229                     init_fetch0:	
   236                           ;	Called with low address in FSR and high address in W
   237                           
   238  0229  087E               	movf	126,w
   239  022A  008A               	movwf	10
   240  022B  087F               	movf	127,w
   241  022C  0082               	movwf	2
   242  022D                     init_ram0:	
   243                           ;Called with:
   244                           ;	high address of idata address in btemp 
   245                           ;	low address of idata address in btemp+1 
   246                           ;	low address of data in FSR
   247                           ;	high address + 1 of data in btemp-1
   248                           
   249  022D  2229  118A         	fcall	init_fetch0
   250  022F  0080               	movwf	0
   251  0230  0A84               	incf	4,f
   252  0231  0804               	movf	4,w
   253  0232  067D               	xorwf	125,w
   254  0233  1903               	btfsc	3,2
   255  0234  3400               	retlw	0
   256  0235  0AFF               	incf	127,f
   257  0236  1903               	btfsc	3,2
   258  0237  0AFE               	incf	126,f
   259  0238  2A2D               	goto	init_ram0
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:	
   263  0070                     ?___ftge:	
   264  0070                     ?_main:	
   265                           ; 1 bit 
   266                           
   267  0070                     ?_pos:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_convertAD:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?___awdiv:	
   274                           ; 2 bytes @ 0x0
   275                           
   276  0070                     ?___ftpack:	
   277                           ; 2 bytes @ 0x0
   278                           
   279  0070                     convertAD@config:	
   280                           ; 3 bytes @ 0x0
   281                           
   282  0070                     pos@digit:	
   283                           ; 2 bytes @ 0x0
   284                           
   285  0070                     ___awdiv@divisor:	
   286                           ; 2 bytes @ 0x0
   287                           
   288  0070                     ___ftpack@arg:	
   289                           ; 2 bytes @ 0x0
   290                           
   291  0070                     ___ftge@ff1:	
   292                           ; 3 bytes @ 0x0
   293                           
   294                           
   295                           ; 3 bytes @ 0x0
   296  0070                     	ds	2
   297  0072                     ??_convertAD:	
   298  0072                     ??_pos:	
   299                           ; 1 bytes @ 0x2
   300                           
   301  0072                     ___awdiv@dividend:	
   302                           ; 1 bytes @ 0x2
   303                           
   304                           
   305                           ; 2 bytes @ 0x2
   306  0072                     	ds	1
   307  0073                     ___ftpack@exp:	
   308  0073                     ___ftge@ff2:	
   309                           ; 1 bytes @ 0x3
   310                           
   311                           
   312                           ; 3 bytes @ 0x3
   313  0073                     	ds	1
   314  0074                     ??___awdiv:	
   315  0074                     ___ftpack@sign:	
   316                           ; 1 bytes @ 0x4
   317                           
   318                           
   319                           ; 1 bytes @ 0x4
   320  0074                     	ds	1
   321  0075                     ??___ftpack:	
   322  0075                     ___awdiv@counter:	
   323                           ; 1 bytes @ 0x5
   324                           
   325                           
   326                           ; 1 bytes @ 0x5
   327  0075                     	ds	1
   328  0076                     ??___ftge:	
   329  0076                     ___awdiv@sign:	
   330                           ; 1 bytes @ 0x6
   331                           
   332                           
   333                           ; 1 bytes @ 0x6
   334  0076                     	ds	1
   335  0077                     ___awdiv@quotient:	
   336                           
   337                           ; 2 bytes @ 0x7
   338  0077                     	ds	1
   339  0078                     ?___awtoft:	
   340  0078                     ___awtoft@c:	
   341                           ; 3 bytes @ 0x8
   342                           
   343                           
   344                           ; 2 bytes @ 0x8
   345  0078                     	ds	1
   346  0079                     ?___wmul:	
   347  0079                     ___wmul@multiplier:	
   348                           ; 2 bytes @ 0x9
   349                           
   350                           
   351                           ; 2 bytes @ 0x9
   352  0079                     	ds	2
   353  007B                     ??___awtoft:	
   354  007B                     ___wmul@multiplicand:	
   355                           ; 1 bytes @ 0xB
   356                           
   357                           
   358                           ; 2 bytes @ 0xB
   359  007B                     	ds	2
   360  007D                     ??___wmul:	
   361  007D                     ___awtoft@sign:	
   362                           ; 1 bytes @ 0xD
   363                           
   364                           
   365                           ; 1 bytes @ 0xD
   366  007D                     	ds	1
   367  007E                     ??_main:	
   368                           
   369                           	psect	cstackBANK0
   370  0020                     __pcstackBANK0:	
   371                           ; 1 bytes @ 0xE
   372                           
   373  0020                     ?___ftmul:	
   374  0020                     ___wmul@product:	
   375                           ; 3 bytes @ 0x0
   376                           
   377  0020                     ___ftmul@f1:	
   378                           ; 2 bytes @ 0x0
   379                           
   380  0020                     convertAD@selecAN:	
   381                           ; 3 bytes @ 0x0
   382                           
   383                           
   384                           ; 14 bytes @ 0x0
   385  0020                     	ds	3
   386  0023                     ___ftmul@f2:	
   387                           
   388                           ; 3 bytes @ 0x3
   389  0023                     	ds	3
   390  0026                     ??___ftmul:	
   391                           
   392                           ; 1 bytes @ 0x6
   393  0026                     	ds	4
   394  002A                     ___ftmul@exp:	
   395                           
   396                           ; 1 bytes @ 0xA
   397  002A                     	ds	1
   398  002B                     ___ftmul@f3_as_product:	
   399                           
   400                           ; 3 bytes @ 0xB
   401  002B                     	ds	3
   402  002E                     ___ftmul@cntr:	
   403  002E                     convertAD@ch:	
   404                           ; 1 bytes @ 0xE
   405                           
   406                           
   407                           ; 2 bytes @ 0xE
   408  002E                     	ds	1
   409  002F                     ___ftmul@sign:	
   410                           
   411                           ; 1 bytes @ 0xF
   412  002F                     	ds	1
   413  0030                     ?___fttol:	
   414  0030                     ___fttol@f1:	
   415                           ; 4 bytes @ 0x10
   416                           
   417                           
   418                           ; 3 bytes @ 0x10
   419  0030                     	ds	4
   420  0034                     ??___fttol:	
   421                           
   422                           ; 1 bytes @ 0x14
   423  0034                     	ds	4
   424  0038                     ___fttol@sign1:	
   425                           
   426                           ; 1 bytes @ 0x18
   427  0038                     	ds	1
   428  0039                     ___fttol@lval:	
   429                           
   430                           ; 4 bytes @ 0x19
   431  0039                     	ds	4
   432  003D                     ___fttol@exp1:	
   433                           
   434                           ; 1 bytes @ 0x1D
   435  003D                     	ds	1
   436  003E                     ?_disp7WriteDig:	
   437  003E                     disp7WriteDig@digit:	
   438                           ; 1 bytes @ 0x1E
   439                           
   440                           
   441                           ; 2 bytes @ 0x1E
   442  003E                     	ds	2
   443  0040                     disp7WriteDig@position:	
   444                           
   445                           ; 2 bytes @ 0x20
   446  0040                     	ds	2
   447  0042                     ??_disp7WriteDig:	
   448                           
   449                           ; 1 bytes @ 0x22
   450  0042                     	ds	4
   451  0046                     ?_disp7WriteNum:	
   452  0046                     disp7WriteNum@num_f:	
   453                           ; 1 bytes @ 0x26
   454                           
   455                           
   456                           ; 3 bytes @ 0x26
   457  0046                     	ds	3
   458  0049                     ??_disp7WriteNum:	
   459                           
   460                           ; 1 bytes @ 0x29
   461  0049                     	ds	4
   462  004D                     disp7WriteNum@mul:	
   463                           
   464                           ; 2 bytes @ 0x2D
   465  004D                     	ds	2
   466  004F                     _disp7WriteNum$602:	
   467                           
   468                           ; 2 bytes @ 0x2F
   469  004F                     	ds	2
   470  0051                     disp7WriteNum@num_i:	
   471                           
   472                           ; 2 bytes @ 0x31
   473  0051                     	ds	2
   474  0053                     main@measure:	
   475                           
   476                           ; 3 bytes @ 0x33
   477  0053                     	ds	3
   478  0056                     main@result:	
   479                           
   480                           ; 2 bytes @ 0x36
   481  0056                     	ds	2
   482                           
   483                           	psect	maintext
   484  02B4                     __pmaintext:	
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 34 in file "../newmain.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  measure         3   51[BANK0 ] float 
   495 ;;  result          2   54[BANK0 ] int 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       5       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       5       0       0       0
   509 ;;Total ram usage:        5 bytes
   510 ;; Hardware stack levels required when called:    4
   511 ;; This function calls:
   512 ;;		___awtoft
   513 ;;		___ftmul
   514 ;;		_convertAD
   515 ;;		_disp7WriteNum
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           
   522                           ;psect for function _main
   523  02B4                     _main:	
   524                           
   525                           ;newmain.c: 35: TRISA=0b00000000;
   526                           
   527                           ;incstack = 0
   528                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   529  02B4  1683               	bsf	3,5	;RP0=1, select bank1
   530  02B5  1303               	bcf	3,6	;RP1=0, select bank1
   531  02B6  0185               	clrf	5	;volatile
   532                           
   533                           ;newmain.c: 36: TRISB=0b01000000;
   534  02B7  3040               	movlw	64
   535  02B8  0086               	movwf	6	;volatile
   536                           
   537                           ;newmain.c: 37: OSCCON = 0b01101100;
   538  02B9  306C               	movlw	108
   539  02BA  008F               	movwf	15	;volatile
   540                           
   541                           ;newmain.c: 38: ANSEL = 0b00100000;
   542  02BB  3020               	movlw	32
   543  02BC  009B               	movwf	27	;volatile
   544                           
   545                           ;newmain.c: 40: OPTION_REGbits.nRBPU = 0;
   546  02BD  1381               	bcf	1,7	;volatile
   547                           
   548                           ;newmain.c: 42: PORTB=0;
   549  02BE  1283               	bcf	3,5	;RP0=0, select bank0
   550  02BF  1303               	bcf	3,6	;RP1=0, select bank0
   551  02C0  0186               	clrf	6	;volatile
   552                           
   553                           ;newmain.c: 43: PORTA=0;
   554  02C1  0185               	clrf	5	;volatile
   555  02C2                     l1265:	
   556                           ;newmain.c: 45: int result;
   557                           ;newmain.c: 46: float measure;
   558                           ;newmain.c: 48: while(1){
   559                           
   560                           
   561                           ;newmain.c: 49: result = convertAD(5);
   562  02C2  3005               	movlw	5
   563  02C3  00F0               	movwf	convertAD@config
   564  02C4  3000               	movlw	0
   565  02C5  00F1               	movwf	convertAD@config+1
   566  02C6  118A  22F9  118A   	fcall	_convertAD
   567  02C9  0871               	movf	?_convertAD+1,w
   568  02CA  1283               	bcf	3,5	;RP0=0, select bank0
   569  02CB  1303               	bcf	3,6	;RP1=0, select bank0
   570  02CC  00D7               	movwf	main@result+1
   571  02CD  0870               	movf	?_convertAD,w
   572  02CE  00D6               	movwf	main@result
   573                           
   574                           ;newmain.c: 50: measure = 0.00488758*result;
   575  02CF  3028               	movlw	40
   576  02D0  00A0               	movwf	___ftmul@f1
   577  02D1  30A0               	movlw	160
   578  02D2  00A1               	movwf	___ftmul@f1+1
   579  02D3  303B               	movlw	59
   580  02D4  00A2               	movwf	___ftmul@f1+2
   581  02D5  0857               	movf	main@result+1,w
   582  02D6  00F9               	movwf	___awtoft@c+1
   583  02D7  0856               	movf	main@result,w
   584  02D8  00F8               	movwf	___awtoft@c
   585  02D9  118A  2249  118A   	fcall	___awtoft
   586  02DC  0878               	movf	?___awtoft,w
   587  02DD  1283               	bcf	3,5	;RP0=0, select bank0
   588  02DE  1303               	bcf	3,6	;RP1=0, select bank0
   589  02DF  00A3               	movwf	___ftmul@f2
   590  02E0  0879               	movf	?___awtoft+1,w
   591  02E1  00A4               	movwf	___ftmul@f2+1
   592  02E2  087A               	movf	?___awtoft+2,w
   593  02E3  00A5               	movwf	___ftmul@f2+2
   594  02E4  118A  257A  118A   	fcall	___ftmul
   595  02E7  1283               	bcf	3,5	;RP0=0, select bank0
   596  02E8  1303               	bcf	3,6	;RP1=0, select bank0
   597  02E9  0820               	movf	?___ftmul,w
   598  02EA  00D3               	movwf	main@measure
   599  02EB  0821               	movf	?___ftmul+1,w
   600  02EC  00D4               	movwf	main@measure+1
   601  02ED  0822               	movf	?___ftmul+2,w
   602  02EE  00D5               	movwf	main@measure+2
   603                           
   604                           ;newmain.c: 52: disp7WriteNum(measure);
   605  02EF  0853               	movf	main@measure,w
   606  02F0  00C6               	movwf	disp7WriteNum@num_f
   607  02F1  0854               	movf	main@measure+1,w
   608  02F2  00C7               	movwf	disp7WriteNum@num_f+1
   609  02F3  0855               	movf	main@measure+2,w
   610  02F4  00C8               	movwf	disp7WriteNum@num_f+2
   611  02F5  118A  264C  118A   	fcall	_disp7WriteNum
   612  02F8  2AC2               	goto	l1265
   613  02F9                     __end_of_main:	
   614                           ;newmain.c: 54: }
   615                           ;newmain.c: 55: return;
   616                           
   617                           
   618                           	psect	text1
   619  064C                     __ptext1:	
   620 ;; *************** function _disp7WriteNum *****************
   621 ;; Defined at:
   622 ;;		line 164 in file "D:/Desktop/VOLTMETER-PIC/VoltMeter-PIC.X/VoltPicLib.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  num_f           3   38[BANK0 ] float 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  num_i           2   49[BANK0 ] int 
   627 ;;  mul             2   45[BANK0 ] int 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       3       0       0       0
   638 ;;      Locals:         0       6       0       0       0
   639 ;;      Temps:          0       4       0       0       0
   640 ;;      Totals:         0      13       0       0       0
   641 ;;Total ram usage:       13 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    3
   644 ;; This function calls:
   645 ;;		___awdiv
   646 ;;		___awtoft
   647 ;;		___ftge
   648 ;;		___ftmul
   649 ;;		___fttol
   650 ;;		___wmul
   651 ;;		_disp7WriteDig
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _disp7WriteNum
   659  064C                     _disp7WriteNum:	
   660                           
   661                           ;VoltPicLib.c: 165: PORTBbits.RB4 = 1;
   662                           
   663                           ;incstack = 0
   664                           ; Regs used in _disp7WriteNum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   665  064C  1283               	bcf	3,5	;RP0=0, select bank0
   666  064D  1303               	bcf	3,6	;RP1=0, select bank0
   667  064E  1606               	bsf	6,4	;volatile
   668                           
   669                           ;VoltPicLib.c: 166: int mul = 1;
   670  064F  3001               	movlw	1
   671  0650  00CD               	movwf	disp7WriteNum@mul
   672  0651  3000               	movlw	0
   673  0652  00CE               	movwf	disp7WriteNum@mul+1
   674                           
   675                           ;VoltPicLib.c: 167: int num_i = 0;
   676  0653  01D1               	clrf	disp7WriteNum@num_i
   677  0654  01D2               	clrf	disp7WriteNum@num_i+1
   678                           
   679                           ;VoltPicLib.c: 169: if (num_f < 1) mul = 1000;
   680  0655  0846               	movf	disp7WriteNum@num_f,w
   681  0656  00F0               	movwf	___ftge@ff1
   682  0657  0847               	movf	disp7WriteNum@num_f+1,w
   683  0658  00F1               	movwf	___ftge@ff1+1
   684  0659  0848               	movf	disp7WriteNum@num_f+2,w
   685  065A  00F2               	movwf	___ftge@ff1+2
   686  065B  3000               	movlw	0
   687  065C  00F3               	movwf	___ftge@ff2
   688  065D  3080               	movlw	128
   689  065E  00F4               	movwf	___ftge@ff2+1
   690  065F  303F               	movlw	63
   691  0660  00F5               	movwf	___ftge@ff2+2
   692  0661  118A  23A3  118A   	fcall	___ftge
   693  0664  1803               	btfsc	3,0
   694  0665  2E6C               	goto	l1219
   695  0666  30E8               	movlw	232
   696  0667  1283               	bcf	3,5	;RP0=0, select bank0
   697  0668  1303               	bcf	3,6	;RP1=0, select bank0
   698  0669  00CD               	movwf	disp7WriteNum@mul
   699  066A  3003               	movlw	3
   700  066B  00CE               	movwf	disp7WriteNum@mul+1
   701  066C                     l1219:	
   702                           
   703                           ;VoltPicLib.c: 170: if (num_f >= 1 && num_f < 10) mul = 100;
   704  066C  1283               	bcf	3,5	;RP0=0, select bank0
   705  066D  1303               	bcf	3,6	;RP1=0, select bank0
   706  066E  0846               	movf	disp7WriteNum@num_f,w
   707  066F  00F0               	movwf	___ftge@ff1
   708  0670  0847               	movf	disp7WriteNum@num_f+1,w
   709  0671  00F1               	movwf	___ftge@ff1+1
   710  0672  0848               	movf	disp7WriteNum@num_f+2,w
   711  0673  00F2               	movwf	___ftge@ff1+2
   712  0674  3000               	movlw	0
   713  0675  00F3               	movwf	___ftge@ff2
   714  0676  3080               	movlw	128
   715  0677  00F4               	movwf	___ftge@ff2+1
   716  0678  303F               	movlw	63
   717  0679  00F5               	movwf	___ftge@ff2+2
   718  067A  118A  23A3  118A   	fcall	___ftge
   719  067D  1C03               	btfss	3,0
   720  067E  2E98               	goto	l1225
   721  067F  1283               	bcf	3,5	;RP0=0, select bank0
   722  0680  1303               	bcf	3,6	;RP1=0, select bank0
   723  0681  0846               	movf	disp7WriteNum@num_f,w
   724  0682  00F0               	movwf	___ftge@ff1
   725  0683  0847               	movf	disp7WriteNum@num_f+1,w
   726  0684  00F1               	movwf	___ftge@ff1+1
   727  0685  0848               	movf	disp7WriteNum@num_f+2,w
   728  0686  00F2               	movwf	___ftge@ff1+2
   729  0687  3000               	movlw	0
   730  0688  00F3               	movwf	___ftge@ff2
   731  0689  3020               	movlw	32
   732  068A  00F4               	movwf	___ftge@ff2+1
   733  068B  3041               	movlw	65
   734  068C  00F5               	movwf	___ftge@ff2+2
   735  068D  118A  23A3  118A   	fcall	___ftge
   736  0690  1803               	btfsc	3,0
   737  0691  2E98               	goto	l1225
   738  0692  3064               	movlw	100
   739  0693  1283               	bcf	3,5	;RP0=0, select bank0
   740  0694  1303               	bcf	3,6	;RP1=0, select bank0
   741  0695  00CD               	movwf	disp7WriteNum@mul
   742  0696  3000               	movlw	0
   743  0697  00CE               	movwf	disp7WriteNum@mul+1
   744  0698                     l1225:	
   745                           
   746                           ;VoltPicLib.c: 171: if (num_f >= 10) mul = 10;
   747  0698  1283               	bcf	3,5	;RP0=0, select bank0
   748  0699  1303               	bcf	3,6	;RP1=0, select bank0
   749  069A  0846               	movf	disp7WriteNum@num_f,w
   750  069B  00F0               	movwf	___ftge@ff1
   751  069C  0847               	movf	disp7WriteNum@num_f+1,w
   752  069D  00F1               	movwf	___ftge@ff1+1
   753  069E  0848               	movf	disp7WriteNum@num_f+2,w
   754  069F  00F2               	movwf	___ftge@ff1+2
   755  06A0  3000               	movlw	0
   756  06A1  00F3               	movwf	___ftge@ff2
   757  06A2  3020               	movlw	32
   758  06A3  00F4               	movwf	___ftge@ff2+1
   759  06A4  3041               	movlw	65
   760  06A5  00F5               	movwf	___ftge@ff2+2
   761  06A6  118A  23A3  118A   	fcall	___ftge
   762  06A9  1C03               	btfss	3,0
   763  06AA  2EB1               	goto	l1229
   764  06AB  300A               	movlw	10
   765  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   766  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   767  06AE  00CD               	movwf	disp7WriteNum@mul
   768  06AF  3000               	movlw	0
   769  06B0  00CE               	movwf	disp7WriteNum@mul+1
   770  06B1                     l1229:	
   771                           
   772                           ;VoltPicLib.c: 173: num_i = (int)(num_f*mul);
   773  06B1  1283               	bcf	3,5	;RP0=0, select bank0
   774  06B2  1303               	bcf	3,6	;RP1=0, select bank0
   775  06B3  084E               	movf	disp7WriteNum@mul+1,w
   776  06B4  00F9               	movwf	___awtoft@c+1
   777  06B5  084D               	movf	disp7WriteNum@mul,w
   778  06B6  00F8               	movwf	___awtoft@c
   779  06B7  118A  2249  118A   	fcall	___awtoft
   780  06BA  0878               	movf	?___awtoft,w
   781  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   782  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   783  06BD  00A3               	movwf	___ftmul@f2
   784  06BE  0879               	movf	?___awtoft+1,w
   785  06BF  00A4               	movwf	___ftmul@f2+1
   786  06C0  087A               	movf	?___awtoft+2,w
   787  06C1  00A5               	movwf	___ftmul@f2+2
   788  06C2  0846               	movf	disp7WriteNum@num_f,w
   789  06C3  00A0               	movwf	___ftmul@f1
   790  06C4  0847               	movf	disp7WriteNum@num_f+1,w
   791  06C5  00A1               	movwf	___ftmul@f1+1
   792  06C6  0848               	movf	disp7WriteNum@num_f+2,w
   793  06C7  00A2               	movwf	___ftmul@f1+2
   794  06C8  118A  257A  118A   	fcall	___ftmul
   795  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   796  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   797  06CD  0820               	movf	?___ftmul,w
   798  06CE  00B0               	movwf	___fttol@f1
   799  06CF  0821               	movf	?___ftmul+1,w
   800  06D0  00B1               	movwf	___fttol@f1+1
   801  06D1  0822               	movf	?___ftmul+2,w
   802  06D2  00B2               	movwf	___fttol@f1+2
   803  06D3  118A  24EC  118A   	fcall	___fttol
   804  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   805  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   806  06D8  0831               	movf	?___fttol+1,w
   807  06D9  00D2               	movwf	disp7WriteNum@num_i+1
   808  06DA  0830               	movf	?___fttol,w
   809  06DB  00D1               	movwf	disp7WriteNum@num_i
   810                           
   811                           ;VoltPicLib.c: 176: if (num_f >= 1 && num_f < 10)PORTBbits.RB4 = 0;
   812  06DC  0846               	movf	disp7WriteNum@num_f,w
   813  06DD  00F0               	movwf	___ftge@ff1
   814  06DE  0847               	movf	disp7WriteNum@num_f+1,w
   815  06DF  00F1               	movwf	___ftge@ff1+1
   816  06E0  0848               	movf	disp7WriteNum@num_f+2,w
   817  06E1  00F2               	movwf	___ftge@ff1+2
   818  06E2  3000               	movlw	0
   819  06E3  00F3               	movwf	___ftge@ff2
   820  06E4  3080               	movlw	128
   821  06E5  00F4               	movwf	___ftge@ff2+1
   822  06E6  303F               	movlw	63
   823  06E7  00F5               	movwf	___ftge@ff2+2
   824  06E8  118A  23A3  118A   	fcall	___ftge
   825  06EB  1C03               	btfss	3,0
   826  06EC  2F04               	goto	l83
   827  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   828  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   829  06EF  0846               	movf	disp7WriteNum@num_f,w
   830  06F0  00F0               	movwf	___ftge@ff1
   831  06F1  0847               	movf	disp7WriteNum@num_f+1,w
   832  06F2  00F1               	movwf	___ftge@ff1+1
   833  06F3  0848               	movf	disp7WriteNum@num_f+2,w
   834  06F4  00F2               	movwf	___ftge@ff1+2
   835  06F5  3000               	movlw	0
   836  06F6  00F3               	movwf	___ftge@ff2
   837  06F7  3020               	movlw	32
   838  06F8  00F4               	movwf	___ftge@ff2+1
   839  06F9  3041               	movlw	65
   840  06FA  00F5               	movwf	___ftge@ff2+2
   841  06FB  118A  23A3  118A   	fcall	___ftge
   842  06FE  1803               	btfsc	3,0
   843  06FF  2F04               	goto	l83
   844  0700  1283               	bcf	3,5	;RP0=0, select bank0
   845  0701  1303               	bcf	3,6	;RP1=0, select bank0
   846  0702  1206               	bcf	6,4	;volatile
   847  0703  2F07               	goto	l1237
   848  0704                     l83:	
   849                           
   850                           ;VoltPicLib.c: 177: else PORTBbits.RB4 = 1;
   851  0704  1283               	bcf	3,5	;RP0=0, select bank0
   852  0705  1303               	bcf	3,6	;RP1=0, select bank0
   853  0706  1606               	bsf	6,4	;volatile
   854  0707                     l1237:	
   855                           
   856                           ;VoltPicLib.c: 178: disp7WriteDig((num_i / 100), 1);
   857  0707  3064               	movlw	100
   858  0708  00F0               	movwf	___awdiv@divisor
   859  0709  3000               	movlw	0
   860  070A  00F1               	movwf	___awdiv@divisor+1
   861  070B  0852               	movf	disp7WriteNum@num_i+1,w
   862  070C  00F3               	movwf	___awdiv@dividend+1
   863  070D  0851               	movf	disp7WriteNum@num_i,w
   864  070E  00F2               	movwf	___awdiv@dividend
   865  070F  118A  234A  118A   	fcall	___awdiv
   866  0712  0871               	movf	?___awdiv+1,w
   867  0713  1283               	bcf	3,5	;RP0=0, select bank0
   868  0714  1303               	bcf	3,6	;RP1=0, select bank0
   869  0715  00BF               	movwf	disp7WriteDig@digit+1
   870  0716  0870               	movf	?___awdiv,w
   871  0717  00BE               	movwf	disp7WriteDig@digit
   872  0718  3001               	movlw	1
   873  0719  00C0               	movwf	disp7WriteDig@position
   874  071A  3000               	movlw	0
   875  071B  00C1               	movwf	disp7WriteDig@position+1
   876  071C  118A  246C  118A   	fcall	_disp7WriteDig
   877                           
   878                           ;VoltPicLib.c: 180: if (num_f >= 10)PORTBbits.RB4 = 0;
   879  071F  1283               	bcf	3,5	;RP0=0, select bank0
   880  0720  1303               	bcf	3,6	;RP1=0, select bank0
   881  0721  0846               	movf	disp7WriteNum@num_f,w
   882  0722  00F0               	movwf	___ftge@ff1
   883  0723  0847               	movf	disp7WriteNum@num_f+1,w
   884  0724  00F1               	movwf	___ftge@ff1+1
   885  0725  0848               	movf	disp7WriteNum@num_f+2,w
   886  0726  00F2               	movwf	___ftge@ff1+2
   887  0727  3000               	movlw	0
   888  0728  00F3               	movwf	___ftge@ff2
   889  0729  3020               	movlw	32
   890  072A  00F4               	movwf	___ftge@ff2+1
   891  072B  3041               	movlw	65
   892  072C  00F5               	movwf	___ftge@ff2+2
   893  072D  118A  23A3  118A   	fcall	___ftge
   894  0730  1C03               	btfss	3,0
   895  0731  2F36               	goto	l85
   896  0732  1283               	bcf	3,5	;RP0=0, select bank0
   897  0733  1303               	bcf	3,6	;RP1=0, select bank0
   898  0734  1206               	bcf	6,4	;volatile
   899  0735  2F39               	goto	l1243
   900  0736                     l85:	
   901                           
   902                           ;VoltPicLib.c: 181: else PORTBbits.RB4 = 1;
   903  0736  1283               	bcf	3,5	;RP0=0, select bank0
   904  0737  1303               	bcf	3,6	;RP1=0, select bank0
   905  0738  1606               	bsf	6,4	;volatile
   906  0739                     l1243:	
   907                           
   908                           ;VoltPicLib.c: 182: disp7WriteDig(((num_i - (num_i / 100) * 100) / 10), 2);
   909  0739  3064               	movlw	100
   910  073A  00F0               	movwf	___awdiv@divisor
   911  073B  3000               	movlw	0
   912  073C  00F1               	movwf	___awdiv@divisor+1
   913  073D  0852               	movf	disp7WriteNum@num_i+1,w
   914  073E  00F3               	movwf	___awdiv@dividend+1
   915  073F  0851               	movf	disp7WriteNum@num_i,w
   916  0740  00F2               	movwf	___awdiv@dividend
   917  0741  118A  234A  118A   	fcall	___awdiv
   918  0744  0871               	movf	?___awdiv+1,w
   919  0745  00FA               	movwf	___wmul@multiplier+1
   920  0746  0870               	movf	?___awdiv,w
   921  0747  00F9               	movwf	___wmul@multiplier
   922  0748  3064               	movlw	100
   923  0749  00FB               	movwf	___wmul@multiplicand
   924  074A  3000               	movlw	0
   925  074B  00FC               	movwf	___wmul@multiplicand+1
   926  074C  118A  228D  118A   	fcall	___wmul
   927  074F  0979               	comf	?___wmul,w
   928  0750  1283               	bcf	3,5	;RP0=0, select bank0
   929  0751  1303               	bcf	3,6	;RP1=0, select bank0
   930  0752  00C9               	movwf	??_disp7WriteNum
   931  0753  097A               	comf	?___wmul+1,w
   932  0754  00CA               	movwf	??_disp7WriteNum+1
   933  0755  0AC9               	incf	??_disp7WriteNum,f
   934  0756  1903               	skipnz
   935  0757  0ACA               	incf	??_disp7WriteNum+1,f
   936  0758  0851               	movf	disp7WriteNum@num_i,w
   937  0759  0749               	addwf	??_disp7WriteNum,w
   938  075A  00CF               	movwf	_disp7WriteNum$602
   939  075B  0852               	movf	disp7WriteNum@num_i+1,w
   940  075C  1803               	skipnc
   941  075D  0A52               	incf	disp7WriteNum@num_i+1,w
   942  075E  074A               	addwf	??_disp7WriteNum+1,w
   943  075F  00D0               	movwf	_disp7WriteNum$602+1
   944                           
   945                           ;VoltPicLib.c: 182: disp7WriteDig(((num_i - (num_i / 100) * 100) / 10), 2);
   946  0760  300A               	movlw	10
   947  0761  00F0               	movwf	___awdiv@divisor
   948  0762  3000               	movlw	0
   949  0763  00F1               	movwf	___awdiv@divisor+1
   950  0764  0850               	movf	_disp7WriteNum$602+1,w
   951  0765  00F3               	movwf	___awdiv@dividend+1
   952  0766  084F               	movf	_disp7WriteNum$602,w
   953  0767  00F2               	movwf	___awdiv@dividend
   954  0768  118A  234A  118A   	fcall	___awdiv
   955  076B  0871               	movf	?___awdiv+1,w
   956  076C  1283               	bcf	3,5	;RP0=0, select bank0
   957  076D  1303               	bcf	3,6	;RP1=0, select bank0
   958  076E  00BF               	movwf	disp7WriteDig@digit+1
   959  076F  0870               	movf	?___awdiv,w
   960  0770  00BE               	movwf	disp7WriteDig@digit
   961  0771  3002               	movlw	2
   962  0772  00C0               	movwf	disp7WriteDig@position
   963  0773  3000               	movlw	0
   964  0774  00C1               	movwf	disp7WriteDig@position+1
   965  0775  118A  246C  118A   	fcall	_disp7WriteDig
   966                           
   967                           ;VoltPicLib.c: 184: PORTBbits.RB4 = 1;
   968  0778  1283               	bcf	3,5	;RP0=0, select bank0
   969  0779  1303               	bcf	3,6	;RP1=0, select bank0
   970  077A  1606               	bsf	6,4	;volatile
   971                           
   972                           ;VoltPicLib.c: 185: disp7WriteDig(((num_i - (num_i / 100) * 100) - ((num_i - (num_i / 10
      +                          0) * 100) / 10) * 10), 3);
   973  077B  3064               	movlw	100
   974  077C  00F0               	movwf	___awdiv@divisor
   975  077D  3000               	movlw	0
   976  077E  00F1               	movwf	___awdiv@divisor+1
   977  077F  0852               	movf	disp7WriteNum@num_i+1,w
   978  0780  00F3               	movwf	___awdiv@dividend+1
   979  0781  0851               	movf	disp7WriteNum@num_i,w
   980  0782  00F2               	movwf	___awdiv@dividend
   981  0783  118A  234A  118A   	fcall	___awdiv
   982  0786  0871               	movf	?___awdiv+1,w
   983  0787  00FA               	movwf	___wmul@multiplier+1
   984  0788  0870               	movf	?___awdiv,w
   985  0789  00F9               	movwf	___wmul@multiplier
   986  078A  3064               	movlw	100
   987  078B  00FB               	movwf	___wmul@multiplicand
   988  078C  3000               	movlw	0
   989  078D  00FC               	movwf	___wmul@multiplicand+1
   990  078E  118A  228D  118A   	fcall	___wmul
   991  0791  0979               	comf	?___wmul,w
   992  0792  1283               	bcf	3,5	;RP0=0, select bank0
   993  0793  1303               	bcf	3,6	;RP1=0, select bank0
   994  0794  00C9               	movwf	??_disp7WriteNum
   995  0795  097A               	comf	?___wmul+1,w
   996  0796  00CA               	movwf	??_disp7WriteNum+1
   997  0797  0AC9               	incf	??_disp7WriteNum,f
   998  0798  1903               	skipnz
   999  0799  0ACA               	incf	??_disp7WriteNum+1,f
  1000  079A  0851               	movf	disp7WriteNum@num_i,w
  1001  079B  0749               	addwf	??_disp7WriteNum,w
  1002  079C  00CF               	movwf	_disp7WriteNum$602
  1003  079D  0852               	movf	disp7WriteNum@num_i+1,w
  1004  079E  1803               	skipnc
  1005  079F  0A52               	incf	disp7WriteNum@num_i+1,w
  1006  07A0  074A               	addwf	??_disp7WriteNum+1,w
  1007  07A1  00D0               	movwf	_disp7WriteNum$602+1
  1008                           
  1009                           ;VoltPicLib.c: 185: disp7WriteDig(((num_i - (num_i / 100) * 100) - ((num_i - (num_i / 10
      +                          0) * 100) / 10) * 10), 3);
  1010  07A2  3064               	movlw	100
  1011  07A3  00F0               	movwf	___awdiv@divisor
  1012  07A4  3000               	movlw	0
  1013  07A5  00F1               	movwf	___awdiv@divisor+1
  1014  07A6  0852               	movf	disp7WriteNum@num_i+1,w
  1015  07A7  00F3               	movwf	___awdiv@dividend+1
  1016  07A8  0851               	movf	disp7WriteNum@num_i,w
  1017  07A9  00F2               	movwf	___awdiv@dividend
  1018  07AA  118A  234A  118A   	fcall	___awdiv
  1019  07AD  0871               	movf	?___awdiv+1,w
  1020  07AE  00FA               	movwf	___wmul@multiplier+1
  1021  07AF  0870               	movf	?___awdiv,w
  1022  07B0  00F9               	movwf	___wmul@multiplier
  1023  07B1  3064               	movlw	100
  1024  07B2  00FB               	movwf	___wmul@multiplicand
  1025  07B3  3000               	movlw	0
  1026  07B4  00FC               	movwf	___wmul@multiplicand+1
  1027  07B5  118A  228D  118A   	fcall	___wmul
  1028  07B8  0879               	movf	?___wmul,w
  1029  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1030  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1031  07BB  00C9               	movwf	??_disp7WriteNum
  1032  07BC  087A               	movf	?___wmul+1,w
  1033  07BD  00CA               	movwf	??_disp7WriteNum+1
  1034  07BE  300A               	movlw	10
  1035  07BF  00F0               	movwf	___awdiv@divisor
  1036  07C0  3000               	movlw	0
  1037  07C1  00F1               	movwf	___awdiv@divisor+1
  1038  07C2  0850               	movf	_disp7WriteNum$602+1,w
  1039  07C3  00F3               	movwf	___awdiv@dividend+1
  1040  07C4  084F               	movf	_disp7WriteNum$602,w
  1041  07C5  00F2               	movwf	___awdiv@dividend
  1042  07C6  118A  234A  118A   	fcall	___awdiv
  1043  07C9  0871               	movf	?___awdiv+1,w
  1044  07CA  00FA               	movwf	___wmul@multiplier+1
  1045  07CB  0870               	movf	?___awdiv,w
  1046  07CC  00F9               	movwf	___wmul@multiplier
  1047  07CD  300A               	movlw	10
  1048  07CE  00FB               	movwf	___wmul@multiplicand
  1049  07CF  3000               	movlw	0
  1050  07D0  00FC               	movwf	___wmul@multiplicand+1
  1051  07D1  118A  228D  118A   	fcall	___wmul
  1052  07D4  0879               	movf	?___wmul,w
  1053  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1054  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1055  07D7  0749               	addwf	??_disp7WriteNum,w
  1056  07D8  00CB               	movwf	??_disp7WriteNum+2
  1057  07D9  087A               	movf	?___wmul+1,w
  1058  07DA  1803               	skipnc
  1059  07DB  0A7A               	incf	?___wmul+1,w
  1060  07DC  074A               	addwf	??_disp7WriteNum+1,w
  1061  07DD  00CC               	movwf	??_disp7WriteNum+3
  1062  07DE  09CB               	comf	??_disp7WriteNum+2,f
  1063  07DF  09CC               	comf	??_disp7WriteNum+3,f
  1064  07E0  0ACB               	incf	??_disp7WriteNum+2,f
  1065  07E1  1903               	skipnz
  1066  07E2  0ACC               	incf	??_disp7WriteNum+3,f
  1067  07E3  0851               	movf	disp7WriteNum@num_i,w
  1068  07E4  074B               	addwf	??_disp7WriteNum+2,w
  1069  07E5  00BE               	movwf	disp7WriteDig@digit
  1070  07E6  0852               	movf	disp7WriteNum@num_i+1,w
  1071  07E7  1803               	skipnc
  1072  07E8  0A52               	incf	disp7WriteNum@num_i+1,w
  1073  07E9  074C               	addwf	??_disp7WriteNum+3,w
  1074  07EA  00BF               	movwf	disp7WriteDig@digit+1
  1075  07EB  3003               	movlw	3
  1076  07EC  00C0               	movwf	disp7WriteDig@position
  1077  07ED  3000               	movlw	0
  1078  07EE  00C1               	movwf	disp7WriteDig@position+1
  1079  07EF  118A  246C         	fcall	_disp7WriteDig
  1080  07F1  0008               	return
  1081  07F2                     __end_of_disp7WriteNum:	
  1082                           
  1083                           	psect	text2
  1084  046C                     __ptext2:	
  1085 ;; *************** function _disp7WriteDig *****************
  1086 ;; Defined at:
  1087 ;;		line 68 in file "D:/Desktop/VOLTMETER-PIC/VoltMeter-PIC.X/VoltPicLib.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  digit           2   30[BANK0 ] int 
  1090 ;;  position        2   32[BANK0 ] int 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       4       0       0       0
  1103 ;;      Locals:         0       0       0       0       0
  1104 ;;      Temps:          0       4       0       0       0
  1105 ;;      Totals:         0       8       0       0       0
  1106 ;;Total ram usage:        8 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    2
  1109 ;; This function calls:
  1110 ;;		___awtoft
  1111 ;;		___ftmul
  1112 ;;		___fttol
  1113 ;;		_pos
  1114 ;; This function is called by:
  1115 ;;		_disp7WriteNum
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _disp7WriteDig
  1121  046C                     _disp7WriteDig:	
  1122                           
  1123                           ;VoltPicLib.c: 69: pos(position);
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _disp7WriteDig: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1127  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1128  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1129  046E  0841               	movf	disp7WriteDig@position+1,w
  1130  046F  00F1               	movwf	pos@digit+1
  1131  0470  0840               	movf	disp7WriteDig@position,w
  1132  0471  00F0               	movwf	pos@digit
  1133  0472  118A  2269  118A   	fcall	_pos
  1134                           
  1135                           ;VoltPicLib.c: 70: switch (digit) {
  1136  0475  2CAC               	goto	l1097
  1137  0476                     l66:	
  1138                           ;VoltPicLib.c: 71: case 0:
  1139                           
  1140                           
  1141                           ;VoltPicLib.c: 72: PORTAbits.RA0 = 0;
  1142  0476  1005               	bcf	5,0	;volatile
  1143                           
  1144                           ;VoltPicLib.c: 73: PORTAbits.RA1 = 0;
  1145  0477  1085               	bcf	5,1	;volatile
  1146                           
  1147                           ;VoltPicLib.c: 74: PORTAbits.RA2 = 0;
  1148  0478  1105               	bcf	5,2	;volatile
  1149                           
  1150                           ;VoltPicLib.c: 75: PORTAbits.RA3 = 1;
  1151  0479  1585               	bsf	5,3	;volatile
  1152  047A  2CA8               	goto	L14
  1153  047B                     l68:	
  1154                           ;VoltPicLib.c: 80: case 1:
  1155                           
  1156                           ;VoltPicLib.c: 79: break;
  1157                           
  1158                           ;VoltPicLib.c: 78: PORTBbits.RB0 = 0;
  1159                           
  1160                           ;VoltPicLib.c: 77: PORTBbits.RB5 = 0;
  1161                           
  1162                           ;VoltPicLib.c: 76: PORTAbits.RA4 = 0;
  1163                           
  1164                           
  1165                           ;VoltPicLib.c: 81: PORTAbits.RA0 = 1;
  1166  047B  1405               	bsf	5,0	;volatile
  1167                           
  1168                           ;VoltPicLib.c: 82: PORTAbits.RA1 = 1;
  1169  047C  1485               	bsf	5,1	;volatile
  1170                           
  1171                           ;VoltPicLib.c: 83: PORTAbits.RA2 = 0;
  1172  047D  1105               	bcf	5,2	;volatile
  1173                           
  1174                           ;VoltPicLib.c: 84: PORTAbits.RA3 = 1;
  1175  047E  1585               	bsf	5,3	;volatile
  1176                           
  1177                           ;VoltPicLib.c: 85: PORTAbits.RA4 = 1;
  1178  047F  1605               	bsf	5,4	;volatile
  1179  0480  2C8F               	goto	L2
  1180  0481                     l69:	
  1181                           ;VoltPicLib.c: 89: case 2:
  1182                           
  1183                           ;VoltPicLib.c: 88: break;
  1184                           
  1185                           ;VoltPicLib.c: 87: PORTBbits.RB0 = 1;
  1186                           
  1187                           ;VoltPicLib.c: 86: PORTBbits.RB5 = 0;
  1188                           
  1189                           
  1190                           ;VoltPicLib.c: 90: PORTAbits.RA0 = 0;
  1191  0481  1005               	bcf	5,0	;volatile
  1192                           
  1193                           ;VoltPicLib.c: 91: PORTAbits.RA1 = 0;
  1194  0482  1085               	bcf	5,1	;volatile
  1195                           
  1196                           ;VoltPicLib.c: 92: PORTAbits.RA2 = 1;
  1197  0483  1505               	bsf	5,2	;volatile
  1198  0484  2C88               	goto	L9
  1199  0485                     l70:	
  1200                           ;VoltPicLib.c: 98: case 3:
  1201                           
  1202                           ;VoltPicLib.c: 97: break;
  1203                           
  1204                           ;VoltPicLib.c: 96: PORTBbits.RB0 = 0;
  1205                           
  1206                           ;VoltPicLib.c: 95: PORTBbits.RB5 = 0;
  1207                           
  1208                           ;VoltPicLib.c: 94: PORTAbits.RA4 = 1;
  1209                           
  1210                           ;VoltPicLib.c: 93: PORTAbits.RA3 = 0;
  1211                           
  1212                           
  1213                           ;VoltPicLib.c: 99: PORTAbits.RA0 = 1;
  1214  0485  1405               	bsf	5,0	;volatile
  1215                           
  1216                           ;VoltPicLib.c: 100: PORTAbits.RA1 = 0;
  1217  0486  1085               	bcf	5,1	;volatile
  1218                           
  1219                           ;VoltPicLib.c: 101: PORTAbits.RA2 = 0;
  1220  0487  1105               	bcf	5,2	;volatile
  1221  0488                     L9:	
  1222                           
  1223                           ;VoltPicLib.c: 102: PORTAbits.RA3 = 0;
  1224  0488  1185               	bcf	5,3	;volatile
  1225  0489  2C9F               	goto	L13
  1226  048A                     l71:	
  1227                           ;VoltPicLib.c: 107: case 4:
  1228                           
  1229                           ;VoltPicLib.c: 106: break;
  1230                           
  1231                           ;VoltPicLib.c: 105: PORTBbits.RB0 = 0;
  1232                           
  1233                           ;VoltPicLib.c: 104: PORTBbits.RB5 = 0;
  1234                           
  1235                           ;VoltPicLib.c: 103: PORTAbits.RA4 = 1;
  1236                           
  1237                           
  1238                           ;VoltPicLib.c: 108: PORTAbits.RA0 = 1;
  1239  048A  1405               	bsf	5,0	;volatile
  1240                           
  1241                           ;VoltPicLib.c: 109: PORTAbits.RA1 = 1;
  1242  048B  1485               	bsf	5,1	;volatile
  1243                           
  1244                           ;VoltPicLib.c: 110: PORTAbits.RA2 = 0;
  1245  048C  1105               	bcf	5,2	;volatile
  1246                           
  1247                           ;VoltPicLib.c: 111: PORTAbits.RA3 = 0;
  1248  048D  1185               	bcf	5,3	;volatile
  1249                           
  1250                           ;VoltPicLib.c: 112: PORTAbits.RA4 = 0;
  1251  048E  1205               	bcf	5,4	;volatile
  1252  048F                     L2:	
  1253                           
  1254                           ;VoltPicLib.c: 113: PORTBbits.RB5 = 0;
  1255  048F  1286               	bcf	6,5	;volatile
  1256                           
  1257                           ;VoltPicLib.c: 114: PORTBbits.RB0 = 1;
  1258  0490  1406               	bsf	6,0	;volatile
  1259                           
  1260                           ;VoltPicLib.c: 115: break;
  1261  0491  2CBF               	goto	l1099
  1262  0492                     l72:	
  1263                           ;VoltPicLib.c: 116: case 5:
  1264                           
  1265                           
  1266                           ;VoltPicLib.c: 117: PORTAbits.RA0 = 1;
  1267  0492  1405               	bsf	5,0	;volatile
  1268  0493  2C95               	goto	L11
  1269  0494                     l73:	
  1270                           ;VoltPicLib.c: 125: case 6:
  1271                           
  1272                           ;VoltPicLib.c: 124: break;
  1273                           
  1274                           ;VoltPicLib.c: 123: PORTBbits.RB0 = 0;
  1275                           
  1276                           ;VoltPicLib.c: 122: PORTBbits.RB5 = 1;
  1277                           
  1278                           ;VoltPicLib.c: 121: PORTAbits.RA4 = 0;
  1279                           
  1280                           ;VoltPicLib.c: 120: PORTAbits.RA3 = 0;
  1281                           
  1282                           ;VoltPicLib.c: 119: PORTAbits.RA2 = 0;
  1283                           
  1284                           ;VoltPicLib.c: 118: PORTAbits.RA1 = 0;
  1285                           
  1286                           
  1287                           ;VoltPicLib.c: 126: PORTAbits.RA0 = 0;
  1288  0494  1005               	bcf	5,0	;volatile
  1289  0495                     L11:	
  1290                           
  1291                           ;VoltPicLib.c: 127: PORTAbits.RA1 = 0;
  1292  0495  1085               	bcf	5,1	;volatile
  1293                           
  1294                           ;VoltPicLib.c: 128: PORTAbits.RA2 = 0;
  1295  0496  1105               	bcf	5,2	;volatile
  1296                           
  1297                           ;VoltPicLib.c: 129: PORTAbits.RA3 = 0;
  1298  0497  1185               	bcf	5,3	;volatile
  1299                           
  1300                           ;VoltPicLib.c: 130: PORTAbits.RA4 = 0;
  1301  0498  1205               	bcf	5,4	;volatile
  1302                           
  1303                           ;VoltPicLib.c: 131: PORTBbits.RB5 = 1;
  1304  0499  1686               	bsf	6,5	;volatile
  1305  049A  2CAA               	goto	L8
  1306  049B                     l74:	
  1307                           ;VoltPicLib.c: 134: case 7:
  1308                           
  1309                           ;VoltPicLib.c: 133: break;
  1310                           
  1311                           ;VoltPicLib.c: 132: PORTBbits.RB0 = 0;
  1312                           
  1313                           
  1314                           ;VoltPicLib.c: 135: PORTAbits.RA0 = 1;
  1315  049B  1405               	bsf	5,0	;volatile
  1316                           
  1317                           ;VoltPicLib.c: 136: PORTAbits.RA1 = 1;
  1318  049C  1485               	bsf	5,1	;volatile
  1319                           
  1320                           ;VoltPicLib.c: 137: PORTAbits.RA2 = 0;
  1321  049D  1105               	bcf	5,2	;volatile
  1322                           
  1323                           ;VoltPicLib.c: 138: PORTAbits.RA3 = 1;
  1324  049E  1585               	bsf	5,3	;volatile
  1325  049F                     L13:	
  1326                           
  1327                           ;VoltPicLib.c: 139: PORTAbits.RA4 = 1;
  1328  049F  1605               	bsf	5,4	;volatile
  1329  04A0  2CA9               	goto	L10
  1330  04A1                     l75:	
  1331                           ;VoltPicLib.c: 143: case 8:
  1332                           
  1333                           ;VoltPicLib.c: 142: break;
  1334                           
  1335                           ;VoltPicLib.c: 141: PORTBbits.RB0 = 0;
  1336                           
  1337                           ;VoltPicLib.c: 140: PORTBbits.RB5 = 0;
  1338                           
  1339                           
  1340                           ;VoltPicLib.c: 144: PORTAbits.RA0 = 0;
  1341  04A1  1005               	bcf	5,0	;volatile
  1342                           
  1343                           ;VoltPicLib.c: 145: PORTAbits.RA1 = 0;
  1344  04A2  1085               	bcf	5,1	;volatile
  1345  04A3  2CA6               	goto	L12
  1346  04A4                     l76:	
  1347                           ;VoltPicLib.c: 152: case 9:
  1348                           
  1349                           ;VoltPicLib.c: 151: break;
  1350                           
  1351                           ;VoltPicLib.c: 150: PORTBbits.RB0 = 0;
  1352                           
  1353                           ;VoltPicLib.c: 149: PORTBbits.RB5 = 0;
  1354                           
  1355                           ;VoltPicLib.c: 148: PORTAbits.RA4 = 0;
  1356                           
  1357                           ;VoltPicLib.c: 147: PORTAbits.RA3 = 0;
  1358                           
  1359                           ;VoltPicLib.c: 146: PORTAbits.RA2 = 0;
  1360                           
  1361                           
  1362                           ;VoltPicLib.c: 153: PORTAbits.RA0 = 1;
  1363  04A4  1405               	bsf	5,0	;volatile
  1364                           
  1365                           ;VoltPicLib.c: 154: PORTAbits.RA1 = 1;
  1366  04A5  1485               	bsf	5,1	;volatile
  1367  04A6                     L12:	
  1368                           
  1369                           ;VoltPicLib.c: 155: PORTAbits.RA2 = 0;
  1370  04A6  1105               	bcf	5,2	;volatile
  1371                           
  1372                           ;VoltPicLib.c: 156: PORTAbits.RA3 = 0;
  1373  04A7  1185               	bcf	5,3	;volatile
  1374  04A8                     L14:	
  1375                           
  1376                           ;VoltPicLib.c: 157: PORTAbits.RA4 = 0;
  1377  04A8  1205               	bcf	5,4	;volatile
  1378  04A9                     L10:	
  1379                           
  1380                           ;VoltPicLib.c: 158: PORTBbits.RB5 = 0;
  1381  04A9  1286               	bcf	6,5	;volatile
  1382  04AA                     L8:	
  1383                           
  1384                           ;VoltPicLib.c: 159: PORTBbits.RB0 = 0;
  1385  04AA  1006               	bcf	6,0	;volatile
  1386                           
  1387                           ;VoltPicLib.c: 161: }
  1388                           
  1389                           ;VoltPicLib.c: 160: break;
  1390  04AB  2CBF               	goto	l1099
  1391  04AC                     l1097:	
  1392                           
  1393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1394                           ; Switch size 1, requested type "space"
  1395                           ; Number of cases is 1, Range of values is 0 to 0
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte            4     3 (average)
  1399                           ; direct_byte            9     7 (fixed)
  1400                           ; jumptable            260     6 (fixed)
  1401                           ;	Chosen strategy is simple_byte
  1402  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1403  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1404  04AE  083F               	movf	disp7WriteDig@digit+1,w
  1405  04AF  3A00               	xorlw	0	; case 0
  1406  04B0  1903               	skipnz
  1407  04B1  2CB3               	goto	l1331
  1408  04B2  2CBF               	goto	l1099
  1409  04B3                     l1331:	
  1410                           
  1411                           ; Switch size 1, requested type "space"
  1412                           ; Number of cases is 10, Range of values is 0 to 9
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; direct_byte           27     7 (fixed)
  1416                           ; simple_byte           31    16 (average)
  1417                           ; jumptable            260     6 (fixed)
  1418                           ;	Chosen strategy is direct_byte
  1419  04B3  083E               	movf	disp7WriteDig@digit,w
  1420  04B4  0084               	movwf	4
  1421  04B5  300A               	movlw	10
  1422  04B6  0204               	subwf	4,w
  1423  04B7  1803               	skipnc
  1424  04B8  2CBF               	goto	l1099
  1425  04B9  3000               	movlw	high S1333
  1426  04BA  008A               	movwf	10
  1427  04BB  1003               	clrc
  1428  04BC  0D04               	rlf	4,w
  1429  04BD  3E02               	addlw	low S1333
  1430  04BE  0082               	movwf	2
  1431  04BF                     l1099:	
  1432                           
  1433                           ;VoltPicLib.c: 162: _delay((unsigned long)((t_ref)*(4000000/4000.0)));
  1434  04BF  0867               	movf	_t_ref+1,w
  1435  04C0  00F9               	movwf	___awtoft@c+1
  1436  04C1  0866               	movf	_t_ref,w
  1437  04C2  00F8               	movwf	___awtoft@c
  1438  04C3  118A  2249  118A   	fcall	___awtoft
  1439  04C6  0878               	movf	?___awtoft,w
  1440  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1441  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1442  04C9  00A3               	movwf	___ftmul@f2
  1443  04CA  0879               	movf	?___awtoft+1,w
  1444  04CB  00A4               	movwf	___ftmul@f2+1
  1445  04CC  087A               	movf	?___awtoft+2,w
  1446  04CD  00A5               	movwf	___ftmul@f2+2
  1447  04CE  3000               	movlw	0
  1448  04CF  00A0               	movwf	___ftmul@f1
  1449  04D0  307A               	movlw	122
  1450  04D1  00A1               	movwf	___ftmul@f1+1
  1451  04D2  3044               	movlw	68
  1452  04D3  00A2               	movwf	___ftmul@f1+2
  1453  04D4  118A  257A  118A   	fcall	___ftmul
  1454  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1455  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1456  04D9  0820               	movf	?___ftmul,w
  1457  04DA  00B0               	movwf	___fttol@f1
  1458  04DB  0821               	movf	?___ftmul+1,w
  1459  04DC  00B1               	movwf	___fttol@f1+1
  1460  04DD  0822               	movf	?___ftmul+2,w
  1461  04DE  00B2               	movwf	___fttol@f1+2
  1462  04DF  118A  24EC         	fcall	___fttol
  1463  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1464  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1465  04E3  0830               	movf	?___fttol,w
  1466  04E4  00C2               	movwf	??_disp7WriteDig
  1467  04E5  0831               	movf	?___fttol+1,w
  1468  04E6  00C3               	movwf	??_disp7WriteDig+1
  1469  04E7  0832               	movf	?___fttol+2,w
  1470  04E8  00C4               	movwf	??_disp7WriteDig+2
  1471  04E9  0833               	movf	?___fttol+3,w
  1472  04EA  00C5               	movwf	??_disp7WriteDig+3
  1473  04EB  0008               	return
  1474  04EC                     __end_of_disp7WriteDig:	
  1475                           
  1476                           	psect	swtext1
  1477  0002                     __pswtext1:	
  1478  0002                     S1333:	
  1479  0002  118A  2C76         	ljmp	l66
  1480  0004  118A  2C7B         	ljmp	l68
  1481  0006  118A  2C81         	ljmp	l69
  1482  0008  118A  2C85         	ljmp	l70
  1483  000A  118A  2C8A         	ljmp	l71
  1484  000C  118A  2C92         	ljmp	l72
  1485  000E  118A  2C94         	ljmp	l73
  1486  0010  118A  2C9B         	ljmp	l74
  1487  0012  118A  2CA1         	ljmp	l75
  1488  0014  118A  2CA4         	ljmp	l76
  1489                           
  1490                           	psect	text3
  1491  0269                     __ptext3:	
  1492 ;; *************** function _pos *****************
  1493 ;; Defined at:
  1494 ;;		line 49 in file "D:/Desktop/VOLTMETER-PIC/VoltMeter-PIC.X/VoltPicLib.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  digit           2    0[COMMON] int 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         2       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         2       0       0       0       0
  1512 ;;Total ram usage:        2 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_disp7WriteDig
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _pos
  1523  0269                     _pos:	
  1524                           
  1525                           ;VoltPicLib.c: 50: switch (digit) {
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _pos: [wreg-fsr0h+status,2+status,0]
  1529  0269  2A7C               	goto	l983
  1530  026A                     l58:	
  1531                           ;VoltPicLib.c: 51: case 1:
  1532                           
  1533                           
  1534                           ;VoltPicLib.c: 52: PORTBbits.RB1 = 1;
  1535  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1536  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1537  026C  1486               	bsf	6,1	;volatile
  1538                           
  1539                           ;VoltPicLib.c: 53: PORTBbits.RB2 = 0;
  1540  026D  1106               	bcf	6,2	;volatile
  1541                           
  1542                           ;VoltPicLib.c: 54: PORTBbits.RB3 = 0;
  1543  026E  1186               	bcf	6,3	;volatile
  1544                           
  1545                           ;VoltPicLib.c: 55: break;
  1546  026F  0008               	return
  1547  0270                     l60:	
  1548                           ;VoltPicLib.c: 56: case 2:
  1549                           
  1550                           
  1551                           ;VoltPicLib.c: 57: PORTBbits.RB1 = 0;
  1552  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0272  1086               	bcf	6,1	;volatile
  1555                           
  1556                           ;VoltPicLib.c: 58: PORTBbits.RB2 = 1;
  1557  0273  1506               	bsf	6,2	;volatile
  1558                           
  1559                           ;VoltPicLib.c: 59: PORTBbits.RB3 = 0;
  1560  0274  1186               	bcf	6,3	;volatile
  1561                           
  1562                           ;VoltPicLib.c: 60: break;
  1563  0275  0008               	return
  1564  0276                     l61:	
  1565                           ;VoltPicLib.c: 61: case 3:
  1566                           
  1567                           
  1568                           ;VoltPicLib.c: 62: PORTBbits.RB1 = 0;
  1569  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0278  1086               	bcf	6,1	;volatile
  1572                           
  1573                           ;VoltPicLib.c: 63: PORTBbits.RB2 = 0;
  1574  0279  1106               	bcf	6,2	;volatile
  1575                           
  1576                           ;VoltPicLib.c: 64: PORTBbits.RB3 = 1;
  1577  027A  1586               	bsf	6,3	;volatile
  1578                           
  1579                           ;VoltPicLib.c: 66: }
  1580                           
  1581                           ;VoltPicLib.c: 65: break;
  1582  027B  0008               	return
  1583  027C                     l983:	
  1584                           
  1585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1586                           ; Switch size 1, requested type "space"
  1587                           ; Number of cases is 1, Range of values is 0 to 0
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte            4     3 (average)
  1591                           ; direct_byte            9     7 (fixed)
  1592                           ; jumptable            260     6 (fixed)
  1593                           ;	Chosen strategy is simple_byte
  1594  027C  0871               	movf	pos@digit+1,w
  1595  027D  3A00               	xorlw	0	; case 0
  1596  027E  1903               	skipnz
  1597  027F  2A81               	goto	l1335
  1598  0280  2A8C               	goto	l62
  1599  0281                     l1335:	
  1600                           
  1601                           ; Switch size 1, requested type "space"
  1602                           ; Number of cases is 3, Range of values is 1 to 3
  1603                           ; switch strategies available:
  1604                           ; Name         Instructions Cycles
  1605                           ; simple_byte           10     6 (average)
  1606                           ; direct_byte           16    10 (fixed)
  1607                           ; jumptable            263     9 (fixed)
  1608                           ;	Chosen strategy is simple_byte
  1609  0281  0870               	movf	pos@digit,w
  1610  0282  3A01               	xorlw	1	; case 1
  1611  0283  1903               	skipnz
  1612  0284  2A6A               	goto	l58
  1613  0285  3A03               	xorlw	3	; case 2
  1614  0286  1903               	skipnz
  1615  0287  2A70               	goto	l60
  1616  0288  3A01               	xorlw	1	; case 3
  1617  0289  1903               	skipnz
  1618  028A  2A76               	goto	l61
  1619  028B  2A8C               	goto	l62
  1620  028C                     l62:	
  1621  028C  0008               	return
  1622  028D                     __end_of_pos:	
  1623                           
  1624                           	psect	text4
  1625  04EC                     __ptext4:	
  1626 ;; *************** function ___fttol *****************
  1627 ;; Defined at:
  1628 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  f1              3   16[BANK0 ] float 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  lval            4   25[BANK0 ] unsigned long 
  1633 ;;  exp1            1   29[BANK0 ] unsigned char 
  1634 ;;  sign1           1   24[BANK0 ] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  4   16[BANK0 ] long 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       4       0       0       0
  1645 ;;      Locals:         0       6       0       0       0
  1646 ;;      Temps:          0       4       0       0       0
  1647 ;;      Totals:         0      14       0       0       0
  1648 ;;Total ram usage:       14 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_disp7WriteDig
  1654 ;;		_disp7WriteNum
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function ___fttol
  1660  04EC                     ___fttol:	
  1661                           
  1662                           ;incstack = 0
  1663                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1664  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1665  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1666  04EE  0830               	movf	___fttol@f1,w
  1667  04EF  00B4               	movwf	??___fttol
  1668  04F0  0831               	movf	___fttol@f1+1,w
  1669  04F1  00B5               	movwf	??___fttol+1
  1670  04F2  0832               	movf	___fttol@f1+2,w
  1671  04F3  00B6               	movwf	??___fttol+2
  1672  04F4  1003               	clrc
  1673  04F5  0D35               	rlf	??___fttol+1,w
  1674  04F6  0D36               	rlf	??___fttol+2,w
  1675  04F7  00B7               	movwf	??___fttol+3
  1676  04F8  0837               	movf	??___fttol+3,w
  1677  04F9  00BD               	movwf	___fttol@exp1
  1678  04FA  083D               	movf	___fttol@exp1,w
  1679  04FB  1D03               	btfss	3,2
  1680  04FC  2D06               	goto	l1057
  1681  04FD  3000               	movlw	0
  1682  04FE  00B3               	movwf	?___fttol+3
  1683  04FF  3000               	movlw	0
  1684  0500  00B2               	movwf	?___fttol+2
  1685  0501  3000               	movlw	0
  1686  0502  00B1               	movwf	?___fttol+1
  1687  0503  3000               	movlw	0
  1688  0504  00B0               	movwf	?___fttol
  1689  0505  0008               	return
  1690  0506                     l1057:	
  1691  0506  0830               	movf	___fttol@f1,w
  1692  0507  00B4               	movwf	??___fttol
  1693  0508  0831               	movf	___fttol@f1+1,w
  1694  0509  00B5               	movwf	??___fttol+1
  1695  050A  0832               	movf	___fttol@f1+2,w
  1696  050B  00B6               	movwf	??___fttol+2
  1697  050C  3017               	movlw	23
  1698  050D                     u945:	
  1699  050D  1003               	clrc
  1700  050E  0CB6               	rrf	??___fttol+2,f
  1701  050F  0CB5               	rrf	??___fttol+1,f
  1702  0510  0CB4               	rrf	??___fttol,f
  1703  0511  3EFF               	addlw	-1
  1704  0512  1D03               	skipz
  1705  0513  2D0D               	goto	u945
  1706  0514  0834               	movf	??___fttol,w
  1707  0515  00B7               	movwf	??___fttol+3
  1708  0516  0837               	movf	??___fttol+3,w
  1709  0517  00B8               	movwf	___fttol@sign1
  1710  0518  17B1               	bsf	___fttol@f1+1,7
  1711  0519  30FF               	movlw	255
  1712  051A  05B0               	andwf	___fttol@f1,f
  1713  051B  30FF               	movlw	255
  1714  051C  05B1               	andwf	___fttol@f1+1,f
  1715  051D  3000               	movlw	0
  1716  051E  05B2               	andwf	___fttol@f1+2,f
  1717  051F  0830               	movf	___fttol@f1,w
  1718  0520  00B9               	movwf	___fttol@lval
  1719  0521  0831               	movf	___fttol@f1+1,w
  1720  0522  00BA               	movwf	___fttol@lval+1
  1721  0523  0832               	movf	___fttol@f1+2,w
  1722  0524  00BB               	movwf	___fttol@lval+2
  1723  0525  01BC               	clrf	___fttol@lval+3
  1724  0526  308E               	movlw	142
  1725  0527  02BD               	subwf	___fttol@exp1,f
  1726  0528  1FBD               	btfss	___fttol@exp1,7
  1727  0529  2D48               	goto	l1077
  1728  052A  083D               	movf	___fttol@exp1,w
  1729  052B  3A80               	xorlw	128
  1730  052C  3E8F               	addlw	143
  1731  052D  1803               	skipnc
  1732  052E  2D38               	goto	l1075
  1733  052F  3000               	movlw	0
  1734  0530  00B3               	movwf	?___fttol+3
  1735  0531  3000               	movlw	0
  1736  0532  00B2               	movwf	?___fttol+2
  1737  0533  3000               	movlw	0
  1738  0534  00B1               	movwf	?___fttol+1
  1739  0535  3000               	movlw	0
  1740  0536  00B0               	movwf	?___fttol
  1741  0537  0008               	return
  1742  0538                     l1075:	
  1743  0538  3001               	movlw	1
  1744  0539                     u975:	
  1745  0539  1003               	clrc
  1746  053A  0CBC               	rrf	___fttol@lval+3,f
  1747  053B  0CBB               	rrf	___fttol@lval+2,f
  1748  053C  0CBA               	rrf	___fttol@lval+1,f
  1749  053D  0CB9               	rrf	___fttol@lval,f
  1750  053E  3EFF               	addlw	-1
  1751  053F  1D03               	skipz
  1752  0540  2D39               	goto	u975
  1753  0541  3001               	movlw	1
  1754  0542  00B4               	movwf	??___fttol
  1755  0543  0834               	movf	??___fttol,w
  1756  0544  07BD               	addwf	___fttol@exp1,f
  1757  0545  1903               	btfsc	3,2
  1758  0546  2D63               	goto	l1085
  1759  0547  2D38               	goto	l1075
  1760  0548                     l1077:	
  1761  0548  3018               	movlw	24
  1762  0549  023D               	subwf	___fttol@exp1,w
  1763  054A  1C03               	skipc
  1764  054B  2D60               	goto	l423
  1765  054C  3000               	movlw	0
  1766  054D  00B3               	movwf	?___fttol+3
  1767  054E  3000               	movlw	0
  1768  054F  00B2               	movwf	?___fttol+2
  1769  0550  3000               	movlw	0
  1770  0551  00B1               	movwf	?___fttol+1
  1771  0552  3000               	movlw	0
  1772  0553  00B0               	movwf	?___fttol
  1773  0554  0008               	return
  1774  0555                     l1083:	
  1775  0555  3001               	movlw	1
  1776  0556  00B4               	movwf	??___fttol
  1777  0557                     u1005:	
  1778  0557  1003               	clrc
  1779  0558  0DB9               	rlf	___fttol@lval,f
  1780  0559  0DBA               	rlf	___fttol@lval+1,f
  1781  055A  0DBB               	rlf	___fttol@lval+2,f
  1782  055B  0DBC               	rlf	___fttol@lval+3,f
  1783  055C  0BB4               	decfsz	??___fttol,f
  1784  055D  2D57               	goto	u1005
  1785  055E  3001               	movlw	1
  1786  055F  02BD               	subwf	___fttol@exp1,f
  1787  0560                     l423:	
  1788  0560  083D               	movf	___fttol@exp1,w
  1789  0561  1D03               	btfss	3,2
  1790  0562  2D55               	goto	l1083
  1791  0563                     l1085:	
  1792  0563  0838               	movf	___fttol@sign1,w
  1793  0564  1903               	btfsc	3,2
  1794  0565  2D71               	goto	l1089
  1795  0566  09B9               	comf	___fttol@lval,f
  1796  0567  09BA               	comf	___fttol@lval+1,f
  1797  0568  09BB               	comf	___fttol@lval+2,f
  1798  0569  09BC               	comf	___fttol@lval+3,f
  1799  056A  0AB9               	incf	___fttol@lval,f
  1800  056B  1903               	skipnz
  1801  056C  0ABA               	incf	___fttol@lval+1,f
  1802  056D  1903               	skipnz
  1803  056E  0ABB               	incf	___fttol@lval+2,f
  1804  056F  1903               	skipnz
  1805  0570  0ABC               	incf	___fttol@lval+3,f
  1806  0571                     l1089:	
  1807  0571  083C               	movf	___fttol@lval+3,w
  1808  0572  00B3               	movwf	?___fttol+3
  1809  0573  083B               	movf	___fttol@lval+2,w
  1810  0574  00B2               	movwf	?___fttol+2
  1811  0575  083A               	movf	___fttol@lval+1,w
  1812  0576  00B1               	movwf	?___fttol+1
  1813  0577  0839               	movf	___fttol@lval,w
  1814  0578  00B0               	movwf	?___fttol
  1815  0579  0008               	return
  1816  057A                     __end_of___fttol:	
  1817                           
  1818                           	psect	text5
  1819  057A                     __ptext5:	
  1820 ;; *************** function ___ftmul *****************
  1821 ;; Defined at:
  1822 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  f1              3    0[BANK0 ] float 
  1825 ;;  f2              3    3[BANK0 ] float 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  1828 ;;  sign            1   15[BANK0 ] unsigned char 
  1829 ;;  cntr            1   14[BANK0 ] unsigned char 
  1830 ;;  exp             1   10[BANK0 ] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  3    0[BANK0 ] float 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       6       0       0       0
  1841 ;;      Locals:         0       6       0       0       0
  1842 ;;      Temps:          0       4       0       0       0
  1843 ;;      Totals:         0      16       0       0       0
  1844 ;;Total ram usage:       16 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    1
  1847 ;; This function calls:
  1848 ;;		___ftpack
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;;		_disp7WriteDig
  1852 ;;		_disp7WriteNum
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function ___ftmul
  1858  057A                     ___ftmul:	
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1862  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1863  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1864  057C  0820               	movf	___ftmul@f1,w
  1865  057D  00A6               	movwf	??___ftmul
  1866  057E  0821               	movf	___ftmul@f1+1,w
  1867  057F  00A7               	movwf	??___ftmul+1
  1868  0580  0822               	movf	___ftmul@f1+2,w
  1869  0581  00A8               	movwf	??___ftmul+2
  1870  0582  1003               	clrc
  1871  0583  0D27               	rlf	??___ftmul+1,w
  1872  0584  0D28               	rlf	??___ftmul+2,w
  1873  0585  00A9               	movwf	??___ftmul+3
  1874  0586  0829               	movf	??___ftmul+3,w
  1875  0587  00AA               	movwf	___ftmul@exp
  1876  0588  082A               	movf	___ftmul@exp,w
  1877  0589  1D03               	btfss	3,2
  1878  058A  2D92               	goto	l1007
  1879  058B  3000               	movlw	0
  1880  058C  00A0               	movwf	?___ftmul
  1881  058D  3000               	movlw	0
  1882  058E  00A1               	movwf	?___ftmul+1
  1883  058F  3000               	movlw	0
  1884  0590  00A2               	movwf	?___ftmul+2
  1885  0591  0008               	return
  1886  0592                     l1007:	
  1887  0592  0823               	movf	___ftmul@f2,w
  1888  0593  00A6               	movwf	??___ftmul
  1889  0594  0824               	movf	___ftmul@f2+1,w
  1890  0595  00A7               	movwf	??___ftmul+1
  1891  0596  0825               	movf	___ftmul@f2+2,w
  1892  0597  00A8               	movwf	??___ftmul+2
  1893  0598  1003               	clrc
  1894  0599  0D27               	rlf	??___ftmul+1,w
  1895  059A  0D28               	rlf	??___ftmul+2,w
  1896  059B  00A9               	movwf	??___ftmul+3
  1897  059C  0829               	movf	??___ftmul+3,w
  1898  059D  00AF               	movwf	___ftmul@sign
  1899  059E  082F               	movf	___ftmul@sign,w
  1900  059F  1D03               	btfss	3,2
  1901  05A0  2DA8               	goto	l1013
  1902  05A1  3000               	movlw	0
  1903  05A2  00A0               	movwf	?___ftmul
  1904  05A3  3000               	movlw	0
  1905  05A4  00A1               	movwf	?___ftmul+1
  1906  05A5  3000               	movlw	0
  1907  05A6  00A2               	movwf	?___ftmul+2
  1908  05A7  0008               	return
  1909  05A8                     l1013:	
  1910  05A8  082F               	movf	___ftmul@sign,w
  1911  05A9  3E7B               	addlw	123
  1912  05AA  00A6               	movwf	??___ftmul
  1913  05AB  0826               	movf	??___ftmul,w
  1914  05AC  07AA               	addwf	___ftmul@exp,f
  1915  05AD  0820               	movf	___ftmul@f1,w
  1916  05AE  00A6               	movwf	??___ftmul
  1917  05AF  0821               	movf	___ftmul@f1+1,w
  1918  05B0  00A7               	movwf	??___ftmul+1
  1919  05B1  0822               	movf	___ftmul@f1+2,w
  1920  05B2  00A8               	movwf	??___ftmul+2
  1921  05B3  3010               	movlw	16
  1922  05B4                     u815:	
  1923  05B4  1003               	clrc
  1924  05B5  0CA8               	rrf	??___ftmul+2,f
  1925  05B6  0CA7               	rrf	??___ftmul+1,f
  1926  05B7  0CA6               	rrf	??___ftmul,f
  1927  05B8  3EFF               	addlw	-1
  1928  05B9  1D03               	skipz
  1929  05BA  2DB4               	goto	u815
  1930  05BB  0826               	movf	??___ftmul,w
  1931  05BC  00A9               	movwf	??___ftmul+3
  1932  05BD  0829               	movf	??___ftmul+3,w
  1933  05BE  00AF               	movwf	___ftmul@sign
  1934  05BF  0823               	movf	___ftmul@f2,w
  1935  05C0  00A6               	movwf	??___ftmul
  1936  05C1  0824               	movf	___ftmul@f2+1,w
  1937  05C2  00A7               	movwf	??___ftmul+1
  1938  05C3  0825               	movf	___ftmul@f2+2,w
  1939  05C4  00A8               	movwf	??___ftmul+2
  1940  05C5  3010               	movlw	16
  1941  05C6                     u825:	
  1942  05C6  1003               	clrc
  1943  05C7  0CA8               	rrf	??___ftmul+2,f
  1944  05C8  0CA7               	rrf	??___ftmul+1,f
  1945  05C9  0CA6               	rrf	??___ftmul,f
  1946  05CA  3EFF               	addlw	-1
  1947  05CB  1D03               	skipz
  1948  05CC  2DC6               	goto	u825
  1949  05CD  0826               	movf	??___ftmul,w
  1950  05CE  00A9               	movwf	??___ftmul+3
  1951  05CF  0829               	movf	??___ftmul+3,w
  1952  05D0  06AF               	xorwf	___ftmul@sign,f
  1953  05D1  3080               	movlw	128
  1954  05D2  00A6               	movwf	??___ftmul
  1955  05D3  0826               	movf	??___ftmul,w
  1956  05D4  05AF               	andwf	___ftmul@sign,f
  1957  05D5  17A1               	bsf	___ftmul@f1+1,7
  1958  05D6  17A4               	bsf	___ftmul@f2+1,7
  1959  05D7  30FF               	movlw	255
  1960  05D8  05A3               	andwf	___ftmul@f2,f
  1961  05D9  30FF               	movlw	255
  1962  05DA  05A4               	andwf	___ftmul@f2+1,f
  1963  05DB  3000               	movlw	0
  1964  05DC  05A5               	andwf	___ftmul@f2+2,f
  1965  05DD  3000               	movlw	0
  1966  05DE  00AB               	movwf	___ftmul@f3_as_product
  1967  05DF  3000               	movlw	0
  1968  05E0  00AC               	movwf	___ftmul@f3_as_product+1
  1969  05E1  3000               	movlw	0
  1970  05E2  00AD               	movwf	___ftmul@f3_as_product+2
  1971  05E3  3007               	movlw	7
  1972  05E4  00A6               	movwf	??___ftmul
  1973  05E5  0826               	movf	??___ftmul,w
  1974  05E6  00AE               	movwf	___ftmul@cntr
  1975  05E7                     l1025:	
  1976  05E7  1C20               	btfss	___ftmul@f1,0
  1977  05E8  2DF7               	goto	l1029
  1978  05E9  0823               	movf	___ftmul@f2,w
  1979  05EA  07AB               	addwf	___ftmul@f3_as_product,f
  1980  05EB  0824               	movf	___ftmul@f2+1,w
  1981  05EC  1103               	clrz
  1982  05ED  1803               	skipnc
  1983  05EE  0A24               	incf	___ftmul@f2+1,w
  1984  05EF  1D03               	btfss	3,2
  1985  05F0  07AC               	addwf	___ftmul@f3_as_product+1,f
  1986  05F1  0825               	movf	___ftmul@f2+2,w
  1987  05F2  1103               	clrz
  1988  05F3  1803               	skipnc
  1989  05F4  0A25               	incf	___ftmul@f2+2,w
  1990  05F5  1D03               	btfss	3,2
  1991  05F6  07AD               	addwf	___ftmul@f3_as_product+2,f
  1992  05F7                     l1029:	
  1993  05F7  3001               	movlw	1
  1994  05F8                     u855:	
  1995  05F8  1003               	clrc
  1996  05F9  0CA2               	rrf	___ftmul@f1+2,f
  1997  05FA  0CA1               	rrf	___ftmul@f1+1,f
  1998  05FB  0CA0               	rrf	___ftmul@f1,f
  1999  05FC  3EFF               	addlw	-1
  2000  05FD  1D03               	skipz
  2001  05FE  2DF8               	goto	u855
  2002  05FF  3001               	movlw	1
  2003  0600                     u865:	
  2004  0600  1003               	clrc
  2005  0601  0DA3               	rlf	___ftmul@f2,f
  2006  0602  0DA4               	rlf	___ftmul@f2+1,f
  2007  0603  0DA5               	rlf	___ftmul@f2+2,f
  2008  0604  3EFF               	addlw	-1
  2009  0605  1D03               	skipz
  2010  0606  2E00               	goto	u865
  2011  0607  3001               	movlw	1
  2012  0608  02AE               	subwf	___ftmul@cntr,f
  2013  0609  1D03               	btfss	3,2
  2014  060A  2DE7               	goto	l1025
  2015  060B  3009               	movlw	9
  2016  060C  00A6               	movwf	??___ftmul
  2017  060D  0826               	movf	??___ftmul,w
  2018  060E  00AE               	movwf	___ftmul@cntr
  2019  060F                     l1037:	
  2020  060F  1C20               	btfss	___ftmul@f1,0
  2021  0610  2E1F               	goto	l1041
  2022  0611  0823               	movf	___ftmul@f2,w
  2023  0612  07AB               	addwf	___ftmul@f3_as_product,f
  2024  0613  0824               	movf	___ftmul@f2+1,w
  2025  0614  1103               	clrz
  2026  0615  1803               	skipnc
  2027  0616  0A24               	incf	___ftmul@f2+1,w
  2028  0617  1D03               	btfss	3,2
  2029  0618  07AC               	addwf	___ftmul@f3_as_product+1,f
  2030  0619  0825               	movf	___ftmul@f2+2,w
  2031  061A  1103               	clrz
  2032  061B  1803               	skipnc
  2033  061C  0A25               	incf	___ftmul@f2+2,w
  2034  061D  1D03               	btfss	3,2
  2035  061E  07AD               	addwf	___ftmul@f3_as_product+2,f
  2036  061F                     l1041:	
  2037  061F  3001               	movlw	1
  2038  0620                     u905:	
  2039  0620  1003               	clrc
  2040  0621  0CA2               	rrf	___ftmul@f1+2,f
  2041  0622  0CA1               	rrf	___ftmul@f1+1,f
  2042  0623  0CA0               	rrf	___ftmul@f1,f
  2043  0624  3EFF               	addlw	-1
  2044  0625  1D03               	skipz
  2045  0626  2E20               	goto	u905
  2046  0627  3001               	movlw	1
  2047  0628                     u915:	
  2048  0628  1003               	clrc
  2049  0629  0CAD               	rrf	___ftmul@f3_as_product+2,f
  2050  062A  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2051  062B  0CAB               	rrf	___ftmul@f3_as_product,f
  2052  062C  3EFF               	addlw	-1
  2053  062D  1D03               	skipz
  2054  062E  2E28               	goto	u915
  2055  062F  3001               	movlw	1
  2056  0630  02AE               	subwf	___ftmul@cntr,f
  2057  0631  1D03               	btfss	3,2
  2058  0632  2E0F               	goto	l1037
  2059  0633  082B               	movf	___ftmul@f3_as_product,w
  2060  0634  00F0               	movwf	___ftpack@arg
  2061  0635  082C               	movf	___ftmul@f3_as_product+1,w
  2062  0636  00F1               	movwf	___ftpack@arg+1
  2063  0637  082D               	movf	___ftmul@f3_as_product+2,w
  2064  0638  00F2               	movwf	___ftpack@arg+2
  2065  0639  082A               	movf	___ftmul@exp,w
  2066  063A  00A6               	movwf	??___ftmul
  2067  063B  0826               	movf	??___ftmul,w
  2068  063C  00F3               	movwf	___ftpack@exp
  2069  063D  082F               	movf	___ftmul@sign,w
  2070  063E  00A7               	movwf	??___ftmul+1
  2071  063F  0827               	movf	??___ftmul+1,w
  2072  0640  00F4               	movwf	___ftpack@sign
  2073  0641  118A  2400         	fcall	___ftpack
  2074  0643  0870               	movf	?___ftpack,w
  2075  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0646  00A0               	movwf	?___ftmul
  2078  0647  0871               	movf	?___ftpack+1,w
  2079  0648  00A1               	movwf	?___ftmul+1
  2080  0649  0872               	movf	?___ftpack+2,w
  2081  064A  00A2               	movwf	?___ftmul+2
  2082  064B  0008               	return
  2083  064C                     __end_of___ftmul:	
  2084                           
  2085                           	psect	text6
  2086  0249                     __ptext6:	
  2087 ;; *************** function ___awtoft *****************
  2088 ;; Defined at:
  2089 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  c               2    8[COMMON] int 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  sign            1   13[COMMON] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  3    8[COMMON] float 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, pclath, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         3       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0
  2105 ;;      Temps:          2       0       0       0       0
  2106 ;;      Totals:         6       0       0       0       0
  2107 ;;Total ram usage:        6 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		___ftpack
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;;		_disp7WriteDig
  2115 ;;		_disp7WriteNum
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           
  2120                           ;psect for function ___awtoft
  2121  0249                     ___awtoft:	
  2122                           
  2123                           ;incstack = 0
  2124                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2125  0249  01FD               	clrf	___awtoft@sign
  2126  024A  1FF9               	btfss	___awtoft@c+1,7
  2127  024B  2A53               	goto	l997
  2128  024C  09F8               	comf	___awtoft@c,f
  2129  024D  09F9               	comf	___awtoft@c+1,f
  2130  024E  0AF8               	incf	___awtoft@c,f
  2131  024F  1903               	skipnz
  2132  0250  0AF9               	incf	___awtoft@c+1,f
  2133  0251  01FD               	clrf	___awtoft@sign
  2134  0252  0AFD               	incf	___awtoft@sign,f
  2135  0253                     l997:	
  2136  0253  0878               	movf	___awtoft@c,w
  2137  0254  00F0               	movwf	___ftpack@arg
  2138  0255  0879               	movf	___awtoft@c+1,w
  2139  0256  00F1               	movwf	___ftpack@arg+1
  2140  0257  01F2               	clrf	___ftpack@arg+2
  2141  0258  308E               	movlw	142
  2142  0259  00FB               	movwf	??___awtoft
  2143  025A  087B               	movf	??___awtoft,w
  2144  025B  00F3               	movwf	___ftpack@exp
  2145  025C  087D               	movf	___awtoft@sign,w
  2146  025D  00FC               	movwf	??___awtoft+1
  2147  025E  087C               	movf	??___awtoft+1,w
  2148  025F  00F4               	movwf	___ftpack@sign
  2149  0260  118A  2400         	fcall	___ftpack
  2150  0262  0870               	movf	?___ftpack,w
  2151  0263  00F8               	movwf	?___awtoft
  2152  0264  0871               	movf	?___ftpack+1,w
  2153  0265  00F9               	movwf	?___awtoft+1
  2154  0266  0872               	movf	?___ftpack+2,w
  2155  0267  00FA               	movwf	?___awtoft+2
  2156  0268  0008               	return
  2157  0269                     __end_of___awtoft:	
  2158                           
  2159                           	psect	text7
  2160  0400                     __ptext7:	
  2161 ;; *************** function ___ftpack *****************
  2162 ;; Defined at:
  2163 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  arg             3    0[COMMON] unsigned um
  2166 ;;  exp             1    3[COMMON] unsigned char 
  2167 ;;  sign            1    4[COMMON] unsigned char 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  3    0[COMMON] float 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         5       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0
  2181 ;;      Temps:          3       0       0       0       0
  2182 ;;      Totals:         8       0       0       0       0
  2183 ;;Total ram usage:        8 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		___awtoft
  2189 ;;		___ftmul
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function ___ftpack
  2195  0400                     ___ftpack:	
  2196                           
  2197                           ;incstack = 0
  2198                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2199  0400  0873               	movf	___ftpack@exp,w
  2200  0401  1903               	btfsc	3,2
  2201  0402  2C08               	goto	l951
  2202  0403  0872               	movf	___ftpack@arg+2,w
  2203  0404  0471               	iorwf	___ftpack@arg+1,w
  2204  0405  0470               	iorwf	___ftpack@arg,w
  2205  0406  1D03               	skipz
  2206  0407  2C1B               	goto	l957
  2207  0408                     l951:	
  2208  0408  3000               	movlw	0
  2209  0409  00F0               	movwf	?___ftpack
  2210  040A  3000               	movlw	0
  2211  040B  00F1               	movwf	?___ftpack+1
  2212  040C  3000               	movlw	0
  2213  040D  00F2               	movwf	?___ftpack+2
  2214  040E  0008               	return
  2215  040F                     l955:	
  2216  040F  3001               	movlw	1
  2217  0410  00F5               	movwf	??___ftpack
  2218  0411  0875               	movf	??___ftpack,w
  2219  0412  07F3               	addwf	___ftpack@exp,f
  2220  0413  3001               	movlw	1
  2221  0414                     u685:	
  2222  0414  1003               	clrc
  2223  0415  0CF2               	rrf	___ftpack@arg+2,f
  2224  0416  0CF1               	rrf	___ftpack@arg+1,f
  2225  0417  0CF0               	rrf	___ftpack@arg,f
  2226  0418  3EFF               	addlw	-1
  2227  0419  1D03               	skipz
  2228  041A  2C14               	goto	u685
  2229  041B                     l957:	
  2230  041B  30FE               	movlw	254
  2231  041C  0572               	andwf	___ftpack@arg+2,w
  2232  041D  1903               	btfsc	3,2
  2233  041E  2C36               	goto	l332
  2234  041F  2C0F               	goto	l955
  2235  0420                     l959:	
  2236  0420  3001               	movlw	1
  2237  0421  00F5               	movwf	??___ftpack
  2238  0422  0875               	movf	??___ftpack,w
  2239  0423  07F3               	addwf	___ftpack@exp,f
  2240  0424  3001               	movlw	1
  2241  0425  07F0               	addwf	___ftpack@arg,f
  2242  0426  3000               	movlw	0
  2243  0427  1803               	skipnc
  2244  0428  3001               	movlw	1
  2245  0429  07F1               	addwf	___ftpack@arg+1,f
  2246  042A  3000               	movlw	0
  2247  042B  1803               	skipnc
  2248  042C  3001               	movlw	1
  2249  042D  07F2               	addwf	___ftpack@arg+2,f
  2250  042E  3001               	movlw	1
  2251  042F                     u705:	
  2252  042F  1003               	clrc
  2253  0430  0CF2               	rrf	___ftpack@arg+2,f
  2254  0431  0CF1               	rrf	___ftpack@arg+1,f
  2255  0432  0CF0               	rrf	___ftpack@arg,f
  2256  0433  3EFF               	addlw	-1
  2257  0434  1D03               	skipz
  2258  0435  2C2F               	goto	u705
  2259  0436                     l332:	
  2260  0436  30FF               	movlw	255
  2261  0437  0572               	andwf	___ftpack@arg+2,w
  2262  0438  1903               	btfsc	3,2
  2263  0439  2C45               	goto	l967
  2264  043A  2C20               	goto	l959
  2265  043B                     l965:	
  2266  043B  3001               	movlw	1
  2267  043C  02F3               	subwf	___ftpack@exp,f
  2268  043D  3001               	movlw	1
  2269  043E                     u725:	
  2270  043E  1003               	clrc
  2271  043F  0DF0               	rlf	___ftpack@arg,f
  2272  0440  0DF1               	rlf	___ftpack@arg+1,f
  2273  0441  0DF2               	rlf	___ftpack@arg+2,f
  2274  0442  3EFF               	addlw	-1
  2275  0443  1D03               	skipz
  2276  0444  2C3E               	goto	u725
  2277  0445                     l967:	
  2278  0445  1BF1               	btfsc	___ftpack@arg+1,7
  2279  0446  2C4B               	goto	l339
  2280  0447  3002               	movlw	2
  2281  0448  0273               	subwf	___ftpack@exp,w
  2282  0449  1803               	skipnc
  2283  044A  2C3B               	goto	l965
  2284  044B                     l339:	
  2285  044B  1873               	btfsc	___ftpack@exp,0
  2286  044C  2C53               	goto	l340
  2287  044D  30FF               	movlw	255
  2288  044E  05F0               	andwf	___ftpack@arg,f
  2289  044F  307F               	movlw	127
  2290  0450  05F1               	andwf	___ftpack@arg+1,f
  2291  0451  30FF               	movlw	255
  2292  0452  05F2               	andwf	___ftpack@arg+2,f
  2293  0453                     l340:	
  2294  0453  1003               	clrc
  2295  0454  0CF3               	rrf	___ftpack@exp,f
  2296  0455  0873               	movf	___ftpack@exp,w
  2297  0456  00F5               	movwf	??___ftpack
  2298  0457  01F6               	clrf	??___ftpack+1
  2299  0458  01F7               	clrf	??___ftpack+2
  2300  0459  3010               	movlw	16
  2301  045A                     u765:	
  2302  045A  1003               	clrc
  2303  045B  0DF5               	rlf	??___ftpack,f
  2304  045C  0DF6               	rlf	??___ftpack+1,f
  2305  045D  0DF7               	rlf	??___ftpack+2,f
  2306  045E  3EFF               	addlw	-1
  2307  045F  1D03               	skipz
  2308  0460  2C5A               	goto	u765
  2309  0461  0875               	movf	??___ftpack,w
  2310  0462  04F0               	iorwf	___ftpack@arg,f
  2311  0463  0876               	movf	??___ftpack+1,w
  2312  0464  04F1               	iorwf	___ftpack@arg+1,f
  2313  0465  0877               	movf	??___ftpack+2,w
  2314  0466  04F2               	iorwf	___ftpack@arg+2,f
  2315  0467  0874               	movf	___ftpack@sign,w
  2316  0468  1903               	btfsc	3,2
  2317  0469  0008               	return
  2318  046A  17F2               	bsf	___ftpack@arg+2,7
  2319  046B  0008               	return
  2320  046C                     __end_of___ftpack:	
  2321                           
  2322                           	psect	text8
  2323  028D                     __ptext8:	
  2324 ;; *************** function ___wmul *****************
  2325 ;; Defined at:
  2326 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  multiplier      2    9[COMMON] unsigned int 
  2329 ;;  multiplicand    2   11[COMMON] unsigned int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  product         2    0[BANK0 ] unsigned int 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2    9[COMMON] unsigned int 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         4       0       0       0       0
  2342 ;;      Locals:         0       2       0       0       0
  2343 ;;      Temps:          0       0       0       0       0
  2344 ;;      Totals:         4       2       0       0       0
  2345 ;;Total ram usage:        6 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_disp7WriteNum
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function ___wmul
  2356  028D                     ___wmul:	
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2360  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2361  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2362  028F  01A0               	clrf	___wmul@product
  2363  0290  01A1               	clrf	___wmul@product+1
  2364  0291                     l1111:	
  2365  0291  1C79               	btfss	___wmul@multiplier,0
  2366  0292  2A9B               	goto	l171
  2367  0293  087B               	movf	___wmul@multiplicand,w
  2368  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0296  07A0               	addwf	___wmul@product,f
  2371  0297  1803               	skipnc
  2372  0298  0AA1               	incf	___wmul@product+1,f
  2373  0299  087C               	movf	___wmul@multiplicand+1,w
  2374  029A  07A1               	addwf	___wmul@product+1,f
  2375  029B                     l171:	
  2376  029B  3001               	movlw	1
  2377  029C                     u1045:	
  2378  029C  1003               	clrc
  2379  029D  0DFB               	rlf	___wmul@multiplicand,f
  2380  029E  0DFC               	rlf	___wmul@multiplicand+1,f
  2381  029F  3EFF               	addlw	-1
  2382  02A0  1D03               	skipz
  2383  02A1  2A9C               	goto	u1045
  2384  02A2  3001               	movlw	1
  2385  02A3                     u1055:	
  2386  02A3  1003               	clrc
  2387  02A4  0CFA               	rrf	___wmul@multiplier+1,f
  2388  02A5  0CF9               	rrf	___wmul@multiplier,f
  2389  02A6  3EFF               	addlw	-1
  2390  02A7  1D03               	skipz
  2391  02A8  2AA3               	goto	u1055
  2392  02A9  0879               	movf	___wmul@multiplier,w
  2393  02AA  047A               	iorwf	___wmul@multiplier+1,w
  2394  02AB  1D03               	btfss	3,2
  2395  02AC  2A91               	goto	l1111
  2396  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2397  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2398  02AF  0821               	movf	___wmul@product+1,w
  2399  02B0  00FA               	movwf	?___wmul+1
  2400  02B1  0820               	movf	___wmul@product,w
  2401  02B2  00F9               	movwf	?___wmul
  2402  02B3  0008               	return
  2403  02B4                     __end_of___wmul:	
  2404                           
  2405                           	psect	text9
  2406  03A3                     __ptext9:	
  2407 ;; *************** function ___ftge *****************
  2408 ;; Defined at:
  2409 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  ff1             3    0[COMMON] float 
  2412 ;;  ff2             3    3[COMMON] float 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         6       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0
  2426 ;;      Temps:          6       0       0       0       0
  2427 ;;      Totals:        12       0       0       0       0
  2428 ;;Total ram usage:       12 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_disp7WriteNum
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function ___ftge
  2439  03A3                     ___ftge:	
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2443  03A3  1FF2               	btfss	___ftge@ff1+2,7
  2444  03A4  2BCA               	goto	l1171
  2445  03A5  3000               	movlw	0
  2446  03A6  00F6               	movwf	??___ftge
  2447  03A7  3000               	movlw	0
  2448  03A8  00F7               	movwf	??___ftge+1
  2449  03A9  3080               	movlw	128
  2450  03AA  00F8               	movwf	??___ftge+2
  2451  03AB  0970               	comf	___ftge@ff1,w
  2452  03AC  00F9               	movwf	??___ftge+3
  2453  03AD  0971               	comf	___ftge@ff1+1,w
  2454  03AE  00FA               	movwf	??___ftge+4
  2455  03AF  0972               	comf	___ftge@ff1+2,w
  2456  03B0  00FB               	movwf	??___ftge+5
  2457  03B1  0AF9               	incf	??___ftge+3,f
  2458  03B2  1903               	skipnz
  2459  03B3  0AFA               	incf	??___ftge+4,f
  2460  03B4  1903               	skipnz
  2461  03B5  0AFB               	incf	??___ftge+5,f
  2462  03B6  0879               	movf	??___ftge+3,w
  2463  03B7  07F6               	addwf	??___ftge,f
  2464  03B8  087A               	movf	??___ftge+4,w
  2465  03B9  1803               	skipnc
  2466  03BA  0F7A               	incfsz	??___ftge+4,w
  2467  03BB  2BBD               	goto	u1181
  2468  03BC  2BBE               	goto	u1182
  2469  03BD                     u1181:	
  2470  03BD  07F7               	addwf	??___ftge+1,f
  2471  03BE                     u1182:	
  2472  03BE  087B               	movf	??___ftge+5,w
  2473  03BF  1803               	skipnc
  2474  03C0  0F7B               	incfsz	??___ftge+5,w
  2475  03C1  2BC3               	goto	u1183
  2476  03C2  2BC4               	goto	u1184
  2477  03C3                     u1183:	
  2478  03C3  07F8               	addwf	??___ftge+2,f
  2479  03C4                     u1184:	
  2480  03C4  0876               	movf	??___ftge,w
  2481  03C5  00F0               	movwf	___ftge@ff1
  2482  03C6  0877               	movf	??___ftge+1,w
  2483  03C7  00F1               	movwf	___ftge@ff1+1
  2484  03C8  0878               	movf	??___ftge+2,w
  2485  03C9  00F2               	movwf	___ftge@ff1+2
  2486  03CA                     l1171:	
  2487  03CA  1FF5               	btfss	___ftge@ff2+2,7
  2488  03CB  2BF1               	goto	l1175
  2489  03CC  3000               	movlw	0
  2490  03CD  00F6               	movwf	??___ftge
  2491  03CE  3000               	movlw	0
  2492  03CF  00F7               	movwf	??___ftge+1
  2493  03D0  3080               	movlw	128
  2494  03D1  00F8               	movwf	??___ftge+2
  2495  03D2  0973               	comf	___ftge@ff2,w
  2496  03D3  00F9               	movwf	??___ftge+3
  2497  03D4  0974               	comf	___ftge@ff2+1,w
  2498  03D5  00FA               	movwf	??___ftge+4
  2499  03D6  0975               	comf	___ftge@ff2+2,w
  2500  03D7  00FB               	movwf	??___ftge+5
  2501  03D8  0AF9               	incf	??___ftge+3,f
  2502  03D9  1903               	skipnz
  2503  03DA  0AFA               	incf	??___ftge+4,f
  2504  03DB  1903               	skipnz
  2505  03DC  0AFB               	incf	??___ftge+5,f
  2506  03DD  0879               	movf	??___ftge+3,w
  2507  03DE  07F6               	addwf	??___ftge,f
  2508  03DF  087A               	movf	??___ftge+4,w
  2509  03E0  1803               	skipnc
  2510  03E1  0F7A               	incfsz	??___ftge+4,w
  2511  03E2  2BE4               	goto	u1201
  2512  03E3  2BE5               	goto	u1202
  2513  03E4                     u1201:	
  2514  03E4  07F7               	addwf	??___ftge+1,f
  2515  03E5                     u1202:	
  2516  03E5  087B               	movf	??___ftge+5,w
  2517  03E6  1803               	skipnc
  2518  03E7  0F7B               	incfsz	??___ftge+5,w
  2519  03E8  2BEA               	goto	u1203
  2520  03E9  2BEB               	goto	u1204
  2521  03EA                     u1203:	
  2522  03EA  07F8               	addwf	??___ftge+2,f
  2523  03EB                     u1204:	
  2524  03EB  0876               	movf	??___ftge,w
  2525  03EC  00F3               	movwf	___ftge@ff2
  2526  03ED  0877               	movf	??___ftge+1,w
  2527  03EE  00F4               	movwf	___ftge@ff2+1
  2528  03EF  0878               	movf	??___ftge+2,w
  2529  03F0  00F5               	movwf	___ftge@ff2+2
  2530  03F1                     l1175:	
  2531  03F1  3080               	movlw	128
  2532  03F2  06F2               	xorwf	___ftge@ff1+2,f
  2533  03F3  3080               	movlw	128
  2534  03F4  06F5               	xorwf	___ftge@ff2+2,f
  2535  03F5  0875               	movf	___ftge@ff2+2,w
  2536  03F6  0272               	subwf	___ftge@ff1+2,w
  2537  03F7  1D03               	skipz
  2538  03F8  0008               	return
  2539  03F9  0874               	movf	___ftge@ff2+1,w
  2540  03FA  0271               	subwf	___ftge@ff1+1,w
  2541  03FB  1D03               	skipz
  2542  03FC  0008               	return
  2543  03FD  0873               	movf	___ftge@ff2,w
  2544  03FE  0270               	subwf	___ftge@ff1,w
  2545  03FF  0008               	return
  2546  0400                     __end_of___ftge:	
  2547                           
  2548                           	psect	text10
  2549  034A                     __ptext10:	
  2550 ;; *************** function ___awdiv *****************
  2551 ;; Defined at:
  2552 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  divisor         2    0[COMMON] int 
  2555 ;;  dividend        2    2[COMMON] int 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  quotient        2    7[COMMON] int 
  2558 ;;  sign            1    6[COMMON] unsigned char 
  2559 ;;  counter         1    5[COMMON] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  2    0[COMMON] int 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         4       0       0       0       0
  2570 ;;      Locals:         4       0       0       0       0
  2571 ;;      Temps:          1       0       0       0       0
  2572 ;;      Totals:         9       0       0       0       0
  2573 ;;Total ram usage:        9 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_disp7WriteNum
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function ___awdiv
  2584  034A                     ___awdiv:	
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2588  034A  01F6               	clrf	___awdiv@sign
  2589  034B  1FF1               	btfss	___awdiv@divisor+1,7
  2590  034C  2B54               	goto	l1131
  2591  034D  09F0               	comf	___awdiv@divisor,f
  2592  034E  09F1               	comf	___awdiv@divisor+1,f
  2593  034F  0AF0               	incf	___awdiv@divisor,f
  2594  0350  1903               	skipnz
  2595  0351  0AF1               	incf	___awdiv@divisor+1,f
  2596  0352  01F6               	clrf	___awdiv@sign
  2597  0353  0AF6               	incf	___awdiv@sign,f
  2598  0354                     l1131:	
  2599  0354  1FF3               	btfss	___awdiv@dividend+1,7
  2600  0355  2B5F               	goto	l1137
  2601  0356  09F2               	comf	___awdiv@dividend,f
  2602  0357  09F3               	comf	___awdiv@dividend+1,f
  2603  0358  0AF2               	incf	___awdiv@dividend,f
  2604  0359  1903               	skipnz
  2605  035A  0AF3               	incf	___awdiv@dividend+1,f
  2606  035B  3001               	movlw	1
  2607  035C  00F4               	movwf	??___awdiv
  2608  035D  0874               	movf	??___awdiv,w
  2609  035E  06F6               	xorwf	___awdiv@sign,f
  2610  035F                     l1137:	
  2611  035F  01F7               	clrf	___awdiv@quotient
  2612  0360  01F8               	clrf	___awdiv@quotient+1
  2613  0361  0870               	movf	___awdiv@divisor,w
  2614  0362  0471               	iorwf	___awdiv@divisor+1,w
  2615  0363  1903               	btfsc	3,2
  2616  0364  2B96               	goto	l1159
  2617  0365  01F5               	clrf	___awdiv@counter
  2618  0366  0AF5               	incf	___awdiv@counter,f
  2619  0367                     l1147:	
  2620  0367  1BF1               	btfsc	___awdiv@divisor+1,7
  2621  0368  2B75               	goto	l1149
  2622  0369  3001               	movlw	1
  2623  036A                     u1105:	
  2624  036A  1003               	clrc
  2625  036B  0DF0               	rlf	___awdiv@divisor,f
  2626  036C  0DF1               	rlf	___awdiv@divisor+1,f
  2627  036D  3EFF               	addlw	-1
  2628  036E  1D03               	skipz
  2629  036F  2B6A               	goto	u1105
  2630  0370  3001               	movlw	1
  2631  0371  00F4               	movwf	??___awdiv
  2632  0372  0874               	movf	??___awdiv,w
  2633  0373  07F5               	addwf	___awdiv@counter,f
  2634  0374  2B67               	goto	l1147
  2635  0375                     l1149:	
  2636  0375  3001               	movlw	1
  2637  0376                     u1125:	
  2638  0376  1003               	clrc
  2639  0377  0DF7               	rlf	___awdiv@quotient,f
  2640  0378  0DF8               	rlf	___awdiv@quotient+1,f
  2641  0379  3EFF               	addlw	-1
  2642  037A  1D03               	skipz
  2643  037B  2B76               	goto	u1125
  2644  037C  0871               	movf	___awdiv@divisor+1,w
  2645  037D  0273               	subwf	___awdiv@dividend+1,w
  2646  037E  1D03               	skipz
  2647  037F  2B82               	goto	u1135
  2648  0380  0870               	movf	___awdiv@divisor,w
  2649  0381  0272               	subwf	___awdiv@dividend,w
  2650  0382                     u1135:	
  2651  0382  1C03               	skipc
  2652  0383  2B8B               	goto	l1155
  2653  0384  0870               	movf	___awdiv@divisor,w
  2654  0385  02F2               	subwf	___awdiv@dividend,f
  2655  0386  0871               	movf	___awdiv@divisor+1,w
  2656  0387  1C03               	skipc
  2657  0388  03F3               	decf	___awdiv@dividend+1,f
  2658  0389  02F3               	subwf	___awdiv@dividend+1,f
  2659  038A  1477               	bsf	___awdiv@quotient,0
  2660  038B                     l1155:	
  2661  038B  3001               	movlw	1
  2662  038C                     u1145:	
  2663  038C  1003               	clrc
  2664  038D  0CF1               	rrf	___awdiv@divisor+1,f
  2665  038E  0CF0               	rrf	___awdiv@divisor,f
  2666  038F  3EFF               	addlw	-1
  2667  0390  1D03               	skipz
  2668  0391  2B8C               	goto	u1145
  2669  0392  3001               	movlw	1
  2670  0393  02F5               	subwf	___awdiv@counter,f
  2671  0394  1D03               	btfss	3,2
  2672  0395  2B75               	goto	l1149
  2673  0396                     l1159:	
  2674  0396  0876               	movf	___awdiv@sign,w
  2675  0397  1903               	btfsc	3,2
  2676  0398  2B9E               	goto	l1163
  2677  0399  09F7               	comf	___awdiv@quotient,f
  2678  039A  09F8               	comf	___awdiv@quotient+1,f
  2679  039B  0AF7               	incf	___awdiv@quotient,f
  2680  039C  1903               	skipnz
  2681  039D  0AF8               	incf	___awdiv@quotient+1,f
  2682  039E                     l1163:	
  2683  039E  0878               	movf	___awdiv@quotient+1,w
  2684  039F  00F1               	movwf	?___awdiv+1
  2685  03A0  0877               	movf	___awdiv@quotient,w
  2686  03A1  00F0               	movwf	?___awdiv
  2687  03A2  0008               	return
  2688  03A3                     __end_of___awdiv:	
  2689                           
  2690                           	psect	text11
  2691  02F9                     __ptext11:	
  2692 ;; *************** function _convertAD *****************
  2693 ;; Defined at:
  2694 ;;		line 28 in file "D:/Desktop/VOLTMETER-PIC/VoltMeter-PIC.X/VoltPicLib.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  config          2    0[COMMON] int 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  selecAN        14    0[BANK0 ] int [7]
  2699 ;;  ch              2   14[BANK0 ] int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2    0[COMMON] int 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         2       0       0       0       0
  2710 ;;      Locals:         0      16       0       0       0
  2711 ;;      Temps:          4       0       0       0       0
  2712 ;;      Totals:         6      16       0       0       0
  2713 ;;Total ram usage:       22 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _convertAD
  2724  02F9                     _convertAD:	
  2725                           
  2726                           ;VoltPicLib.c: 31: int selecAN[7]={0x01,0x02,0x04,0x08,0x10,0x20,0x40};
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _convertAD: [wreg-fsr0h+status,2+status,0]
  2730  02F9  3020               	movlw	convertAD@selecAN& (0+255)
  2731  02FA  0084               	movwf	4
  2732  02FB  3058               	movlw	low convertAD@F1250
  2733  02FC  00F2               	movwf	??_convertAD
  2734  02FD  0804               	movf	4,w
  2735  02FE  00F3               	movwf	??_convertAD+1
  2736  02FF  300E               	movlw	14
  2737  0300  00F4               	movwf	??_convertAD+2
  2738  0301                     u1220:	
  2739  0301  0872               	movf	??_convertAD,w
  2740  0302  0084               	movwf	4
  2741  0303  1383               	bcf	3,7	;select IRP bank0
  2742  0304  0800               	movf	0,w
  2743  0305  00F5               	movwf	??_convertAD+3
  2744  0306  0AF2               	incf	??_convertAD,f
  2745  0307  0873               	movf	??_convertAD+1,w
  2746  0308  0084               	movwf	4
  2747  0309  0875               	movf	??_convertAD+3,w
  2748  030A  0080               	movwf	0
  2749  030B  0AF3               	incf	??_convertAD+1,f
  2750  030C  0BF4               	decfsz	??_convertAD+2,f
  2751  030D  2B01               	goto	u1220
  2752                           
  2753                           ;VoltPicLib.c: 32: int ch;
  2754                           ;VoltPicLib.c: 33: ANSEL=0;
  2755  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2756  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2757  0310  019B               	clrf	27	;volatile
  2758                           
  2759                           ;VoltPicLib.c: 34: ADCON0 = 0;
  2760  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0313  019F               	clrf	31	;volatile
  2763                           
  2764                           ;VoltPicLib.c: 35: ANSEL = selecAN[config];
  2765  0314  0870               	movf	convertAD@config,w
  2766  0315  00F2               	movwf	??_convertAD
  2767  0316  0772               	addwf	??_convertAD,w
  2768  0317  3E20               	addlw	(low (convertAD@selecAN| 0))& (0+255)
  2769  0318  0084               	movwf	4
  2770  0319  0800               	movf	0,w
  2771  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2772  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2773  031C  009B               	movwf	27	;volatile
  2774                           
  2775                           ;VoltPicLib.c: 38: ch=(config<<3);
  2776  031D  0871               	movf	convertAD@config+1,w
  2777  031E  00F3               	movwf	??_convertAD+1
  2778  031F  0870               	movf	convertAD@config,w
  2779  0320  00F2               	movwf	??_convertAD
  2780  0321  1003               	clrc
  2781  0322  0DF2               	rlf	??_convertAD,f
  2782  0323  0DF3               	rlf	??_convertAD+1,f
  2783  0324  1003               	clrc
  2784  0325  0DF2               	rlf	??_convertAD,f
  2785  0326  0DF3               	rlf	??_convertAD+1,f
  2786  0327  1003               	clrc
  2787  0328  0DF2               	rlf	??_convertAD,f
  2788  0329  0DF3               	rlf	??_convertAD+1,f
  2789  032A  0872               	movf	??_convertAD,w
  2790  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2791  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2792  032D  00AE               	movwf	convertAD@ch
  2793  032E  0873               	movf	??_convertAD+1,w
  2794  032F  00AF               	movwf	convertAD@ch+1
  2795                           
  2796                           ;VoltPicLib.c: 39: ADCON0 = (ch|0b11000001);
  2797  0330  082E               	movf	convertAD@ch,w
  2798  0331  38C1               	iorlw	193
  2799  0332  009F               	movwf	31	;volatile
  2800                           
  2801                           ;VoltPicLib.c: 41: ADCON1=0b10000000;
  2802  0333  3080               	movlw	128
  2803  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0336  009F               	movwf	31	;volatile
  2806                           
  2807                           ;VoltPicLib.c: 42: _delay((unsigned long)((1)*(4000000/4000.0)));
  2808  0337  30C7               	movlw	199
  2809  0338  00F2               	movwf	??_convertAD
  2810  0339                     u1317:	
  2811  0339  2B3A               	nop2
  2812  033A  0BF2               	decfsz	??_convertAD,f
  2813  033B  2B39               	goto	u1317
  2814  033C  2B3D               	nop2
  2815  033D  2B3E               	nop2
  2816                           
  2817                           ;VoltPicLib.c: 43: ADCON0bits.GO = 1;
  2818  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2819  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0340  151F               	bsf	31,2	;volatile
  2821  0341                     l51:	
  2822                           ;VoltPicLib.c: 44: while(ADCON0bits.GO_nDONE);
  2823                           
  2824  0341  191F               	btfsc	31,2	;volatile
  2825  0342  2B41               	goto	l51
  2826                           
  2827                           ;VoltPicLib.c: 46: return (((unsigned int)ADRESH)<<8)|(ADRESL);
  2828  0343  081E               	movf	30,w	;volatile
  2829  0344  00F1               	movwf	?_convertAD+1
  2830  0345  1683               	bsf	3,5	;RP0=1, select bank1
  2831  0346  1303               	bcf	3,6	;RP1=0, select bank1
  2832  0347  081E               	movf	30,w	;volatile
  2833  0348  00F0               	movwf	?_convertAD
  2834  0349  0008               	return
  2835  034A                     __end_of_convertAD:	
  2836  007E                     btemp	set	126	;btemp
  2837  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _disp7WriteNum->___awtoft
    _disp7WriteDig->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_disp7WriteNum
    _disp7WriteNum->_disp7WriteDig
    _disp7WriteDig->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   16632
                                             51 BANK0      5     5      0
                           ___awtoft
                            ___ftmul
                          _convertAD
                      _disp7WriteNum
 ---------------------------------------------------------------------------------
 (1) _disp7WriteNum                                       15    12      3   12290
                                             38 BANK0     13    10      3
                            ___awdiv
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___fttol
                             ___wmul
                      _disp7WriteDig
 ---------------------------------------------------------------------------------
 (2) _disp7WriteDig                                        8     4      4    4947
                                             30 BANK0      8     4      4
                            ___awdiv (ARG)
                           ___awtoft
                            ___ftmul
                            ___fttol
                             ___wmul (ARG)
                                _pos
 ---------------------------------------------------------------------------------
 (3) _pos                                                  2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2273
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1879
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     516
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     878
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     936
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _convertAD                                           22    20      2     144
                                              0 COMMON     6     4      2
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   _convertAD
   _disp7WriteNum
     ___awdiv
     ___awtoft
       ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___wmul
       ___awdiv (ARG)
     _disp7WriteDig
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _pos (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     38      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      56      12        0.0%
ABS                  0      0      56       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jul 22 19:58:26 2017

                      pc 0002              __CFG_CP$OFF 0000                       l51 0341  
                     l60 0270                       l61 0276                       l62 028C  
                     l70 0485                       l71 048A                       l72 0492  
                     l73 0494                       l58 026A                       l74 049B  
                     l66 0476                       l75 04A1                       l83 0704  
                     l76 04A4                       l68 047B                       l69 0481  
                     l85 0736             ___awdiv@sign 0076                       fsr 0004  
    ___wmul@multiplicand 007B         convertAD@selecAN 0020                      l171 029B  
                    l340 0453                      l332 0436                      l423 0560  
                    l339 044B                      l951 0408                      l955 040F  
                    l965 043B                      l957 041B                      l967 0445  
                    l959 0420                      l983 027C                      l997 0253  
           __CFG_CPD$OFF 0000                      u705 042F                      u725 043E  
                    u815 05B4                      u905 0620                      u825 05C6  
                    u915 0628                      u765 045A                      u685 0414  
                    u855 05F8                      u865 0600                      u945 050D  
                    u975 0539                      _pos 0269                      fsr0 0004  
                    indf 0000                     S1333 0002             __CFG_LVP$OFF 0000  
                   l1013 05A8                     l1111 0291                     l1007 0592  
                   l1041 061F                     l1025 05E7                     l1131 0354  
                   l1037 060F                     l1029 05F7                     l1137 035F  
                   l1057 0506                     l1225 0698                     l1163 039E  
                   l1155 038B                     l1147 0367                     l1171 03CA  
                   l1083 0555                     l1075 0538                     l1331 04B3  
                   l1243 0739                     l1219 066C                     l1149 0375  
                   l1085 0563                     l1077 0548                     l1237 0707  
                   l1229 06B1                     l1159 0396                     l1175 03F1  
                   l1335 0281                     l1089 0571                     l1097 04AC  
                   l1265 02C2                     l1099 04BF                     ?_pos 0070  
                   u1005 0557                     u1105 036A                     u1201 03E4  
                   u1202 03E5                     u1203 03EA                     u1220 0301  
                   u1204 03EB                     u1125 0376                     u1045 029C  
                   u1135 0382                     u1055 02A3                     u1145 038C  
                   u1317 0339                     u1181 03BD                     u1182 03BE  
                   u1183 03C3                     u1184 03C4              main@measure 0053  
           __CFG_WRT$OFF 0000                     _main 02B4             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     btemp 007E                     start 0000  
          __CFG_IESO$OFF 0000             ___ftmul@cntr 002E             ___ftmul@sign 002F  
           ___fttol@exp1 003D             ___fttol@lval 0039                    ??_pos 0072  
                  ?_main 0070          __end_of___awdiv 03A3            __CFG_WDTE$OFF 0000  
                  _ANSEL 009B          __end_of___ftmul 064C          ___awdiv@divisor 0070  
        __end_of___fttol 057A           __CFG_DEBUG$OFF 0000          ___awdiv@counter 0075  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086              convertAD@ch 002E           __CFG_CCPMX$RB0 0000  
         __CFG_FCMEN$OFF 0000            ___awtoft@sign 007D                    _t_ref 0066  
          ___ftpack@sign 0074           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07F2             __end_of_main 02F9                   ??_main 007E  
          ___fttol@sign1 0038                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0072  
       __end_of___awtoft 0269         __end_of___ftpack 046C                   _OSCCON 008F  
         __CFG_PWRTE$OFF 0000                   ___ftge 03A3                   ___wmul 028D  
              ??___awdiv 0074                ??___ftmul 0026                ??___fttol 0034  
       ___awdiv@quotient 0077    ___ftmul@f3_as_product 002B  __end_of__initialization 07FD  
             ___ftge@ff1 0070               ___ftge@ff2 0073               ___awtoft@c 0078  
  __end_of_disp7WriteDig 04EC    __end_of_disp7WriteNum 07F2               ___ftmul@f1 0020  
             ___ftmul@f2 0023               ___fttol@f1 0030           __pcstackCOMMON 0070  
           __pidataBANK0 0239           _OPTION_REGbits 0081       __size_of_convertAD 0051  
             __pmaintext 02B4                  ?___ftge 0070                  ?___wmul 0079  
              ?___awtoft 0078                ?___ftpack 0070          __size_of___ftge 005D  
                ___awdiv 034A          __size_of___wmul 0027                  ___ftmul 057A  
                ___fttol 04EC        __end_of_convertAD 034A               ??___awtoft 007B  
             ??___ftpack 0075                  __ptext1 064C                  __ptext2 046C  
                __ptext3 0269                  __ptext4 04EC                  __ptext5 057A  
                __ptext6 0249                  __ptext7 0400                  __ptext8 028D  
                __ptext9 03A3             __size_of_pos 0024     end_of_initialization 07FD  
              _PORTAbits 0005                _PORTBbits 0006          convertAD@config 0070  
             main@result 0056              ___ftmul@exp 002A           __end_of___ftge 0400  
         __end_of___wmul 02B4      start_initialization 07F2              __end_of_pos 028D  
     disp7WriteDig@digit 003E                 ??___ftge 0076                 ??___wmul 007D  
             init_fetch0 0229              __pdataBANK0 0058        __size_of___awtoft 0020  
      __size_of___ftpack 006C                ___latbits 0001            __pcstackBANK0 0020  
 __size_of_disp7WriteDig 0080   __size_of_disp7WriteNum 01A6       disp7WriteNum@num_f 0046  
     disp7WriteNum@num_i 0051                 ?___awdiv 0070                 ?___ftmul 0020  
               ?___fttol 0030                __pswtext1 0002                _convertAD 02F9  
  disp7WriteDig@position 0040           ___wmul@product 0020           convertAD@F1250 0058  
          _disp7WriteDig 046C            _disp7WriteNum 064C        _disp7WriteNum$602 004F  
             _ADCON0bits 001F        ___wmul@multiplier 0079               ?_convertAD 0070  
         ?_disp7WriteDig 003E           ?_disp7WriteNum 0046         __size_of___awdiv 0059  
       __size_of___ftmul 00D2         __size_of___fttol 008E                 ___awtoft 0249  
               ___ftpack 0400                 __ptext10 034A                 __ptext11 02F9  
          __size_of_main 0045              ??_convertAD 0072                 init_ram0 022D  
       disp7WriteNum@mul 004D                 pos@digit 0070          ??_disp7WriteDig 0042  
        ??_disp7WriteNum 0049       __CFG_FOSC$INTOSCIO 0000  
